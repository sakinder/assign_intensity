// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "assign_intensity.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic assign_intensity::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic assign_intensity::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<62> assign_intensity::ap_ST_st1_fsm_0 = "1";
const sc_lv<62> assign_intensity::ap_ST_st2_fsm_1 = "10";
const sc_lv<62> assign_intensity::ap_ST_st3_fsm_2 = "100";
const sc_lv<62> assign_intensity::ap_ST_st4_fsm_3 = "1000";
const sc_lv<62> assign_intensity::ap_ST_st5_fsm_4 = "10000";
const sc_lv<62> assign_intensity::ap_ST_st6_fsm_5 = "100000";
const sc_lv<62> assign_intensity::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<62> assign_intensity::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<62> assign_intensity::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<62> assign_intensity::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<62> assign_intensity::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<62> assign_intensity::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<62> assign_intensity::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<62> assign_intensity::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<62> assign_intensity::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<62> assign_intensity::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st30_fsm_29 = "100000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st31_fsm_30 = "1000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st32_fsm_31 = "10000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st33_fsm_32 = "100000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st34_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st35_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st36_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st37_fsm_36 = "1000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st38_fsm_37 = "10000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st39_fsm_38 = "100000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st40_fsm_39 = "1000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st41_fsm_40 = "10000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st42_fsm_41 = "100000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st43_fsm_42 = "1000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st44_fsm_43 = "10000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st45_fsm_44 = "100000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st46_fsm_45 = "1000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st47_fsm_46 = "10000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st48_fsm_47 = "100000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st49_fsm_48 = "1000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st50_fsm_49 = "10000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st51_fsm_50 = "100000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st52_fsm_51 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st53_fsm_52 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st54_fsm_53 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st55_fsm_54 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st56_fsm_55 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st57_fsm_56 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st58_fsm_57 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st59_fsm_58 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st60_fsm_59 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st61_fsm_60 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> assign_intensity::ap_ST_st62_fsm_61 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> assign_intensity::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> assign_intensity::ap_const_lv1_1 = "1";
const sc_lv<32> assign_intensity::ap_const_lv32_1 = "1";
const sc_lv<32> assign_intensity::ap_const_lv32_3 = "11";
const sc_lv<32> assign_intensity::ap_const_lv32_5 = "101";
const sc_lv<32> assign_intensity::ap_const_lv32_7 = "111";
const sc_lv<32> assign_intensity::ap_const_lv32_30 = "110000";
const sc_lv<32> assign_intensity::ap_const_lv32_2 = "10";
const sc_lv<32> assign_intensity::ap_const_lv32_4 = "100";
const sc_lv<32> assign_intensity::ap_const_lv32_6 = "110";
const sc_lv<32> assign_intensity::ap_const_lv32_8 = "1000";
const sc_lv<32> assign_intensity::ap_const_lv32_9 = "1001";
const sc_lv<32> assign_intensity::ap_const_lv32_A = "1010";
const sc_lv<32> assign_intensity::ap_const_lv32_B = "1011";
const sc_lv<32> assign_intensity::ap_const_lv32_10 = "10000";
const sc_lv<32> assign_intensity::ap_const_lv32_20 = "100000";
const sc_lv<32> assign_intensity::ap_const_lv32_24 = "100100";
const sc_lv<32> assign_intensity::ap_const_lv32_2B = "101011";
const sc_lv<32> assign_intensity::ap_const_lv32_2C = "101100";
const sc_lv<32> assign_intensity::ap_const_lv32_2D = "101101";
const sc_lv<32> assign_intensity::ap_const_lv32_2E = "101110";
const sc_lv<1> assign_intensity::ap_const_lv1_0 = "0";
const sc_lv<32> assign_intensity::ap_const_lv32_2F = "101111";
const sc_lv<32> assign_intensity::ap_const_lv32_31 = "110001";
const sc_lv<32> assign_intensity::ap_const_lv32_36 = "110110";
const sc_lv<32> assign_intensity::ap_const_lv32_37 = "110111";
const sc_lv<32> assign_intensity::ap_const_lv32_3C = "111100";
const sc_lv<48> assign_intensity::ap_const_lv48_FFFFFFFFFFFF = "111111111111111111111111111111111111111111111111";
const sc_lv<3> assign_intensity::ap_const_lv3_0 = "000";
const sc_lv<32> assign_intensity::ap_const_lv32_3D = "111101";
const sc_lv<64> assign_intensity::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> assign_intensity::ap_const_lv64_1 = "1";
const sc_lv<64> assign_intensity::ap_const_lv64_2 = "10";
const sc_lv<64> assign_intensity::ap_const_lv64_3 = "11";
const sc_lv<64> assign_intensity::ap_const_lv64_4 = "100";
const sc_lv<64> assign_intensity::ap_const_lv64_5 = "101";
const sc_lv<64> assign_intensity::ap_const_lv64_6 = "110";
const sc_lv<64> assign_intensity::ap_const_lv64_7 = "111";
const sc_lv<64> assign_intensity::ap_const_lv64_8 = "1000";
const sc_lv<64> assign_intensity::ap_const_lv64_9 = "1001";
const sc_lv<64> assign_intensity::ap_const_lv64_A = "1010";
const sc_lv<64> assign_intensity::ap_const_lv64_B = "1011";
const sc_lv<64> assign_intensity::ap_const_lv64_C = "1100";
const sc_lv<64> assign_intensity::ap_const_lv64_D = "1101";
const sc_lv<64> assign_intensity::ap_const_lv64_E = "1110";
const sc_lv<64> assign_intensity::ap_const_lv64_F = "1111";
const sc_lv<32> assign_intensity::ap_const_lv32_35 = "110101";
const sc_lv<32> assign_intensity::ap_const_lv32_3B = "111011";
const sc_lv<32> assign_intensity::ap_const_lv32_3F000000 = "111111000000000000000000000000";
const sc_lv<32> assign_intensity::ap_const_lv32_25 = "100101";
const sc_lv<32> assign_intensity::ap_const_lv32_49800000 = "1001001100000000000000000000000";
const sc_lv<32> assign_intensity::ap_const_lv32_21 = "100001";
const sc_lv<32> assign_intensity::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> assign_intensity::ap_const_lv32_11 = "10001";
const sc_lv<34> assign_intensity::ap_const_lv34_0 = "0000000000000000000000000000000000";
const sc_lv<32> assign_intensity::ap_const_lv32_17 = "10111";
const sc_lv<32> assign_intensity::ap_const_lv32_1E = "11110";
const sc_lv<9> assign_intensity::ap_const_lv9_181 = "110000001";
const sc_lv<8> assign_intensity::ap_const_lv8_7F = "1111111";
const sc_lv<32> assign_intensity::ap_const_lv32_46 = "1000110";
const sc_lv<20> assign_intensity::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<3> assign_intensity::ap_const_lv3_4 = "100";
const sc_lv<3> assign_intensity::ap_const_lv3_1 = "1";
const sc_lv<2> assign_intensity::ap_const_lv2_0 = "00";
const sc_lv<32> assign_intensity::ap_const_lv32_14 = "10100";
const sc_lv<32> assign_intensity::ap_const_lv32_33 = "110011";

assign_intensity::assign_intensity(sc_module_name name) : sc_module(name), mVcdFile(0) {
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0 = new assign_intensity_fadd_32ns_32ns_32_7_full_dsp<1,7,32,32,32>("assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0");
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->clk(ap_clk);
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->reset(ap_rst);
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->din0(tmp_3_i_reg_782);
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->din1(ap_var_for_const0);
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->ce(ap_var_for_const1);
    assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0->dout(grp_fu_337_p2);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1 = new assign_intensity_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1");
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->clk(ap_clk);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->reset(ap_rst);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->din0(tmp_2_i_reg_777);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->din1(ap_var_for_const2);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->ce(ap_var_for_const1);
    assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1->dout(grp_fu_342_p2);
    assign_intensity_fdiv_32ns_32ns_32_16_U2 = new assign_intensity_fdiv_32ns_32ns_32_16<1,16,32,32,32>("assign_intensity_fdiv_32ns_32ns_32_16_U2");
    assign_intensity_fdiv_32ns_32ns_32_16_U2->clk(ap_clk);
    assign_intensity_fdiv_32ns_32ns_32_16_U2->reset(ap_rst);
    assign_intensity_fdiv_32ns_32ns_32_16_U2->din0(ap_var_for_const3);
    assign_intensity_fdiv_32ns_32ns_32_16_U2->din1(tmp_1_i_reg_772);
    assign_intensity_fdiv_32ns_32ns_32_16_U2->ce(ap_var_for_const1);
    assign_intensity_fdiv_32ns_32ns_32_16_U2->dout(grp_fu_347_p2);
    assign_intensity_uitofp_64ns_32_6_U3 = new assign_intensity_uitofp_64ns_32_6<1,6,64,32>("assign_intensity_uitofp_64ns_32_6_U3");
    assign_intensity_uitofp_64ns_32_6_U3->clk(ap_clk);
    assign_intensity_uitofp_64ns_32_6_U3->reset(ap_rst);
    assign_intensity_uitofp_64ns_32_6_U3->din0(grp_fu_352_p0);
    assign_intensity_uitofp_64ns_32_6_U3->ce(ap_var_for_const1);
    assign_intensity_uitofp_64ns_32_6_U3->dout(grp_fu_352_p1);
    assign_intensity_mul_48s_32ns_48_6_U4 = new assign_intensity_mul_48s_32ns_48_6<1,6,48,32,48>("assign_intensity_mul_48s_32ns_48_6_U4");
    assign_intensity_mul_48s_32ns_48_6_U4->clk(ap_clk);
    assign_intensity_mul_48s_32ns_48_6_U4->reset(ap_rst);
    assign_intensity_mul_48s_32ns_48_6_U4->din0(rec_V_reg_303);
    assign_intensity_mul_48s_32ns_48_6_U4->din1(grp_fu_615_p1);
    assign_intensity_mul_48s_32ns_48_6_U4->ce(ap_var_for_const1);
    assign_intensity_mul_48s_32ns_48_6_U4->dout(grp_fu_615_p2);
    assign_intensity_mul_36ns_48ns_52_6_U5 = new assign_intensity_mul_36ns_48ns_52_6<1,6,36,48,52>("assign_intensity_mul_36ns_48ns_52_6_U5");
    assign_intensity_mul_36ns_48ns_52_6_U5->clk(ap_clk);
    assign_intensity_mul_36ns_48ns_52_6_U5->reset(ap_rst);
    assign_intensity_mul_36ns_48ns_52_6_U5->din0(grp_fu_633_p0);
    assign_intensity_mul_36ns_48ns_52_6_U5->din1(grp_fu_633_p1);
    assign_intensity_mul_36ns_48ns_52_6_U5->ce(ap_var_for_const1);
    assign_intensity_mul_36ns_48ns_52_6_U5->dout(grp_fu_633_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_alphabuf_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );
    sensitive << ( tmp_13_cast_fu_604_p1 );

    SC_METHOD(thread_alphabuf_address1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_alphabuf_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );

    SC_METHOD(thread_alphabuf_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st47_fsm_46 );
    sensitive << ( exitcond1_fu_559_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st47_fsm_46 );
    sensitive << ( exitcond1_fu_559_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_sig_cseq_ST_st47_fsm_46 );
    sensitive << ( exitcond1_fu_559_p2 );

    SC_METHOD(thread_ap_sig_117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_148);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_159);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_166);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_174);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_182);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_232);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_241);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_254);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_263);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_272);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_281);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_290);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_301);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_312);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_321);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_336);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_354);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_363);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_375);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_384);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_408);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_440);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_450);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_463);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_473);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_483);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_232 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_241 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_254 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_263 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_483 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_77 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_117 );

    SC_METHOD(thread_ap_sig_cseq_ST_st33_fsm_32);
    sensitive << ( ap_sig_272 );

    SC_METHOD(thread_ap_sig_cseq_ST_st34_fsm_33);
    sensitive << ( ap_sig_473 );

    SC_METHOD(thread_ap_sig_cseq_ST_st37_fsm_36);
    sensitive << ( ap_sig_281 );

    SC_METHOD(thread_ap_sig_cseq_ST_st38_fsm_37);
    sensitive << ( ap_sig_463 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_159 );

    SC_METHOD(thread_ap_sig_cseq_ST_st44_fsm_43);
    sensitive << ( ap_sig_290 );

    SC_METHOD(thread_ap_sig_cseq_ST_st45_fsm_44);
    sensitive << ( ap_sig_301 );

    SC_METHOD(thread_ap_sig_cseq_ST_st46_fsm_45);
    sensitive << ( ap_sig_312 );

    SC_METHOD(thread_ap_sig_cseq_ST_st47_fsm_46);
    sensitive << ( ap_sig_321 );

    SC_METHOD(thread_ap_sig_cseq_ST_st48_fsm_47);
    sensitive << ( ap_sig_336 );

    SC_METHOD(thread_ap_sig_cseq_ST_st49_fsm_48);
    sensitive << ( ap_sig_148 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_st50_fsm_49);
    sensitive << ( ap_sig_354 );

    SC_METHOD(thread_ap_sig_cseq_ST_st54_fsm_53);
    sensitive << ( ap_sig_440 );

    SC_METHOD(thread_ap_sig_cseq_ST_st55_fsm_54);
    sensitive << ( ap_sig_363 );

    SC_METHOD(thread_ap_sig_cseq_ST_st56_fsm_55);
    sensitive << ( ap_sig_375 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_166 );

    SC_METHOD(thread_ap_sig_cseq_ST_st60_fsm_59);
    sensitive << ( ap_sig_450 );

    SC_METHOD(thread_ap_sig_cseq_ST_st61_fsm_60);
    sensitive << ( ap_sig_384 );

    SC_METHOD(thread_ap_sig_cseq_ST_st62_fsm_61);
    sensitive << ( ap_sig_408 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_132 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_174 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_140 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_182 );

    SC_METHOD(thread_cumsum_V_cast_fu_385_p1);
    sensitive << ( val_assign_reg_693 );

    SC_METHOD(thread_cumsum_V_fu_417_p2);
    sensitive << ( tmp11_cast_fu_414_p1 );
    sensitive << ( tmp10_cast_fu_411_p1 );

    SC_METHOD(thread_exitcond1_fu_559_p2);
    sensitive << ( ap_sig_cseq_ST_st47_fsm_46 );
    sensitive << ( i_reg_315 );

    SC_METHOD(thread_exitcond_fu_583_p2);
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );
    sensitive << ( j_reg_326 );

    SC_METHOD(thread_grp_fu_352_p0);
    sensitive << ( cumsum_V_reg_758 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_grp_fu_355_p2);
    sensitive << ( alphabuf_q0 );
    sensitive << ( alphabuf_q1 );

    SC_METHOD(thread_grp_fu_373_p2);
    sensitive << ( reg_361 );
    sensitive << ( reg_365 );

    SC_METHOD(thread_grp_fu_379_p2);
    sensitive << ( reg_369 );
    sensitive << ( grp_fu_373_p2 );

    SC_METHOD(thread_grp_fu_615_p1);
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );
    sensitive << ( grp_fu_615_p10 );

    SC_METHOD(thread_grp_fu_615_p10);
    sensitive << ( reg_361 );

    SC_METHOD(thread_grp_fu_633_p0);
    sensitive << ( rhs_V_cast_reg_809 );
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );

    SC_METHOD(thread_grp_fu_633_p1);
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );
    sensitive << ( grp_fu_633_p10 );

    SC_METHOD(thread_grp_fu_633_p10);
    sensitive << ( alpha_norm_V_reg_855 );

    SC_METHOD(thread_i_1_fu_565_p2);
    sensitive << ( i_reg_315 );

    SC_METHOD(thread_isNeg_fu_460_p3);
    sensitive << ( sh_assign_fu_454_p2 );

    SC_METHOD(thread_j_1_fu_589_p2);
    sensitive << ( j_reg_326 );

    SC_METHOD(thread_loc_V_1_fu_447_p1);
    sensitive << ( p_Val2_s_fu_433_p1 );

    SC_METHOD(thread_node_count_address0);
    sensitive << ( node_count_addr_reg_845 );
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );
    sensitive << ( ap_sig_cseq_ST_st54_fsm_53 );

    SC_METHOD(thread_node_count_ce0);
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );
    sensitive << ( ap_sig_cseq_ST_st54_fsm_53 );

    SC_METHOD(thread_node_count_d0);
    sensitive << ( tmp_10_reg_860 );
    sensitive << ( node_count_load_reg_865 );
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );

    SC_METHOD(thread_node_count_we0);
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );

    SC_METHOD(thread_node_output_address0);
    sensitive << ( node_output_addr_reg_840 );
    sensitive << ( ap_sig_cseq_ST_st62_fsm_61 );
    sensitive << ( ap_sig_cseq_ST_st60_fsm_59 );

    SC_METHOD(thread_node_output_ce0);
    sensitive << ( ap_sig_cseq_ST_st62_fsm_61 );
    sensitive << ( ap_sig_cseq_ST_st60_fsm_59 );

    SC_METHOD(thread_node_output_d0);
    sensitive << ( phitmp_reg_875 );
    sensitive << ( node_output_load_reg_880 );
    sensitive << ( ap_sig_cseq_ST_st62_fsm_61 );

    SC_METHOD(thread_node_output_we0);
    sensitive << ( ap_sig_cseq_ST_st62_fsm_61 );

    SC_METHOD(thread_p_Result_s_fu_485_p3);
    sensitive << ( loc_V_1_reg_793 );

    SC_METHOD(thread_p_Val2_s_fu_433_p1);
    sensitive << ( grp_fu_337_p2 );

    SC_METHOD(thread_r_V_2_fu_548_p3);
    sensitive << ( intensity );

    SC_METHOD(thread_rhs_V_cast_fu_555_p1);
    sensitive << ( r_V_2_fu_548_p3 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_499_p1);
    sensitive << ( sh_assign_1_reg_803 );

    SC_METHOD(thread_sh_assign_1_cast_fu_496_p1);
    sensitive << ( sh_assign_1_reg_803 );

    SC_METHOD(thread_sh_assign_1_fu_477_p3);
    sensitive << ( isNeg_fu_460_p3 );
    sensitive << ( sh_assign_fu_454_p2 );
    sensitive << ( tmp_4_i_i_i_cast_fu_473_p1 );

    SC_METHOD(thread_sh_assign_fu_454_p2);
    sensitive << ( tmp_i_i_i_i_cast_fu_451_p1 );

    SC_METHOD(thread_tmp10_cast_fu_411_p1);
    sensitive << ( tmp_reg_743 );

    SC_METHOD(thread_tmp11_cast_fu_414_p1);
    sensitive << ( tmp9_reg_748 );

    SC_METHOD(thread_tmp9_fu_405_p2);
    sensitive << ( tmp_8_cast_fu_398_p1 );
    sensitive << ( tmp_10_cast_fu_401_p1 );

    SC_METHOD(thread_tmp_10_cast_fu_401_p1);
    sensitive << ( grp_fu_379_p2 );

    SC_METHOD(thread_tmp_10_fu_621_p1);
    sensitive << ( grp_fu_615_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_579_p1);
    sensitive << ( tmp_2_fu_571_p3 );

    SC_METHOD(thread_tmp_13_cast_fu_604_p1);
    sensitive << ( tmp_4_fu_599_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_595_p1);
    sensitive << ( j_reg_326 );

    SC_METHOD(thread_tmp_2_fu_571_p3);
    sensitive << ( i_reg_315 );

    SC_METHOD(thread_tmp_2_i_i_i_fu_492_p1);
    sensitive << ( p_Result_s_fu_485_p3 );

    SC_METHOD(thread_tmp_3_cast_fu_388_p1);
    sensitive << ( grp_fu_379_p2 );

    SC_METHOD(thread_tmp_4_fu_599_p2);
    sensitive << ( tmp_12_cast_reg_822 );
    sensitive << ( tmp_2_cast_fu_595_p1 );

    SC_METHOD(thread_tmp_4_i_i_i_cast_fu_473_p1);
    sensitive << ( tmp_4_i_i_i_fu_468_p2 );

    SC_METHOD(thread_tmp_4_i_i_i_fu_468_p2);
    sensitive << ( loc_V_reg_787 );

    SC_METHOD(thread_tmp_6_fu_518_p3);
    sensitive << ( tmp_7_i_i_i_fu_506_p2 );

    SC_METHOD(thread_tmp_6_i_i_i_fu_502_p1);
    sensitive << ( sh_assign_1_cast_fu_496_p1 );

    SC_METHOD(thread_tmp_7_i_i_i_fu_506_p2);
    sensitive << ( p_Result_s_fu_485_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_499_p1 );

    SC_METHOD(thread_tmp_8_cast_fu_398_p1);
    sensitive << ( val_assign_1_reg_718 );

    SC_METHOD(thread_tmp_8_fu_526_p1);
    sensitive << ( tmp_6_fu_518_p3 );

    SC_METHOD(thread_tmp_9_fu_530_p4);
    sensitive << ( tmp_9_i_i_i_fu_512_p2 );

    SC_METHOD(thread_tmp_9_i_i_i_fu_512_p2);
    sensitive << ( tmp_2_i_i_i_fu_492_p1 );
    sensitive << ( tmp_6_i_i_i_fu_502_p1 );

    SC_METHOD(thread_tmp_fu_392_p2);
    sensitive << ( cumsum_V_cast_fu_385_p1 );
    sensitive << ( tmp_3_cast_fu_388_p1 );

    SC_METHOD(thread_tmp_i_fu_423_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( cumsum_V_fu_417_p2 );

    SC_METHOD(thread_tmp_i_i_i_i_cast_fu_451_p1);
    sensitive << ( loc_V_reg_787 );

    SC_METHOD(thread_tmp_s_fu_540_p3);
    sensitive << ( isNeg_reg_798 );
    sensitive << ( tmp_8_fu_526_p1 );
    sensitive << ( tmp_9_fu_530_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_fu_423_p2 );
    sensitive << ( exitcond1_fu_559_p2 );
    sensitive << ( exitcond_fu_583_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "assign_intensity_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, alphabuf_address0, "(port)alphabuf_address0");
    sc_trace(mVcdFile, alphabuf_ce0, "(port)alphabuf_ce0");
    sc_trace(mVcdFile, alphabuf_q0, "(port)alphabuf_q0");
    sc_trace(mVcdFile, alphabuf_address1, "(port)alphabuf_address1");
    sc_trace(mVcdFile, alphabuf_ce1, "(port)alphabuf_ce1");
    sc_trace(mVcdFile, alphabuf_q1, "(port)alphabuf_q1");
    sc_trace(mVcdFile, intensity, "(port)intensity");
    sc_trace(mVcdFile, node_output_address0, "(port)node_output_address0");
    sc_trace(mVcdFile, node_output_ce0, "(port)node_output_ce0");
    sc_trace(mVcdFile, node_output_we0, "(port)node_output_we0");
    sc_trace(mVcdFile, node_output_d0, "(port)node_output_d0");
    sc_trace(mVcdFile, node_output_q0, "(port)node_output_q0");
    sc_trace(mVcdFile, node_count_address0, "(port)node_count_address0");
    sc_trace(mVcdFile, node_count_ce0, "(port)node_count_ce0");
    sc_trace(mVcdFile, node_count_we0, "(port)node_count_we0");
    sc_trace(mVcdFile, node_count_d0, "(port)node_count_d0");
    sc_trace(mVcdFile, node_count_q0, "(port)node_count_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_77, "ap_sig_77");
    sc_trace(mVcdFile, reg_361, "reg_361");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_117, "ap_sig_117");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_124, "ap_sig_124");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_132, "ap_sig_132");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_140, "ap_sig_140");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st49_fsm_48, "ap_sig_cseq_ST_st49_fsm_48");
    sc_trace(mVcdFile, ap_sig_148, "ap_sig_148");
    sc_trace(mVcdFile, reg_365, "reg_365");
    sc_trace(mVcdFile, grp_fu_355_p2, "grp_fu_355_p2");
    sc_trace(mVcdFile, reg_369, "reg_369");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_159, "ap_sig_159");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_166, "ap_sig_166");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_174, "ap_sig_174");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_182, "ap_sig_182");
    sc_trace(mVcdFile, grp_fu_379_p2, "grp_fu_379_p2");
    sc_trace(mVcdFile, val_assign_reg_693, "val_assign_reg_693");
    sc_trace(mVcdFile, val_assign_1_reg_718, "val_assign_1_reg_718");
    sc_trace(mVcdFile, tmp_fu_392_p2, "tmp_fu_392_p2");
    sc_trace(mVcdFile, tmp_reg_743, "tmp_reg_743");
    sc_trace(mVcdFile, tmp9_fu_405_p2, "tmp9_fu_405_p2");
    sc_trace(mVcdFile, tmp9_reg_748, "tmp9_reg_748");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_232, "ap_sig_232");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_241, "ap_sig_241");
    sc_trace(mVcdFile, cumsum_V_fu_417_p2, "cumsum_V_fu_417_p2");
    sc_trace(mVcdFile, cumsum_V_reg_758, "cumsum_V_reg_758");
    sc_trace(mVcdFile, tmp_i_fu_423_p2, "tmp_i_fu_423_p2");
    sc_trace(mVcdFile, tmp_i_reg_763, "tmp_i_reg_763");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_254, "ap_sig_254");
    sc_trace(mVcdFile, grp_fu_352_p1, "grp_fu_352_p1");
    sc_trace(mVcdFile, tmp_1_i_reg_772, "tmp_1_i_reg_772");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_263, "ap_sig_263");
    sc_trace(mVcdFile, grp_fu_347_p2, "grp_fu_347_p2");
    sc_trace(mVcdFile, tmp_2_i_reg_777, "tmp_2_i_reg_777");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st33_fsm_32, "ap_sig_cseq_ST_st33_fsm_32");
    sc_trace(mVcdFile, ap_sig_272, "ap_sig_272");
    sc_trace(mVcdFile, grp_fu_342_p2, "grp_fu_342_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_782, "tmp_3_i_reg_782");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st37_fsm_36, "ap_sig_cseq_ST_st37_fsm_36");
    sc_trace(mVcdFile, ap_sig_281, "ap_sig_281");
    sc_trace(mVcdFile, loc_V_reg_787, "loc_V_reg_787");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st44_fsm_43, "ap_sig_cseq_ST_st44_fsm_43");
    sc_trace(mVcdFile, ap_sig_290, "ap_sig_290");
    sc_trace(mVcdFile, loc_V_1_fu_447_p1, "loc_V_1_fu_447_p1");
    sc_trace(mVcdFile, loc_V_1_reg_793, "loc_V_1_reg_793");
    sc_trace(mVcdFile, isNeg_fu_460_p3, "isNeg_fu_460_p3");
    sc_trace(mVcdFile, isNeg_reg_798, "isNeg_reg_798");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st45_fsm_44, "ap_sig_cseq_ST_st45_fsm_44");
    sc_trace(mVcdFile, ap_sig_301, "ap_sig_301");
    sc_trace(mVcdFile, sh_assign_1_fu_477_p3, "sh_assign_1_fu_477_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_803, "sh_assign_1_reg_803");
    sc_trace(mVcdFile, rhs_V_cast_fu_555_p1, "rhs_V_cast_fu_555_p1");
    sc_trace(mVcdFile, rhs_V_cast_reg_809, "rhs_V_cast_reg_809");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st46_fsm_45, "ap_sig_cseq_ST_st46_fsm_45");
    sc_trace(mVcdFile, ap_sig_312, "ap_sig_312");
    sc_trace(mVcdFile, i_1_fu_565_p2, "i_1_fu_565_p2");
    sc_trace(mVcdFile, i_1_reg_817, "i_1_reg_817");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st47_fsm_46, "ap_sig_cseq_ST_st47_fsm_46");
    sc_trace(mVcdFile, ap_sig_321, "ap_sig_321");
    sc_trace(mVcdFile, tmp_12_cast_fu_579_p1, "tmp_12_cast_fu_579_p1");
    sc_trace(mVcdFile, tmp_12_cast_reg_822, "tmp_12_cast_reg_822");
    sc_trace(mVcdFile, exitcond1_fu_559_p2, "exitcond1_fu_559_p2");
    sc_trace(mVcdFile, j_1_fu_589_p2, "j_1_fu_589_p2");
    sc_trace(mVcdFile, j_1_reg_830, "j_1_reg_830");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st48_fsm_47, "ap_sig_cseq_ST_st48_fsm_47");
    sc_trace(mVcdFile, ap_sig_336, "ap_sig_336");
    sc_trace(mVcdFile, exitcond_fu_583_p2, "exitcond_fu_583_p2");
    sc_trace(mVcdFile, node_output_addr_reg_840, "node_output_addr_reg_840");
    sc_trace(mVcdFile, node_count_addr_reg_845, "node_count_addr_reg_845");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st50_fsm_49, "ap_sig_cseq_ST_st50_fsm_49");
    sc_trace(mVcdFile, ap_sig_354, "ap_sig_354");
    sc_trace(mVcdFile, grp_fu_615_p2, "grp_fu_615_p2");
    sc_trace(mVcdFile, alpha_norm_V_reg_855, "alpha_norm_V_reg_855");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st55_fsm_54, "ap_sig_cseq_ST_st55_fsm_54");
    sc_trace(mVcdFile, ap_sig_363, "ap_sig_363");
    sc_trace(mVcdFile, tmp_10_fu_621_p1, "tmp_10_fu_621_p1");
    sc_trace(mVcdFile, tmp_10_reg_860, "tmp_10_reg_860");
    sc_trace(mVcdFile, node_count_load_reg_865, "node_count_load_reg_865");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st56_fsm_55, "ap_sig_cseq_ST_st56_fsm_55");
    sc_trace(mVcdFile, ap_sig_375, "ap_sig_375");
    sc_trace(mVcdFile, phitmp_reg_875, "phitmp_reg_875");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st61_fsm_60, "ap_sig_cseq_ST_st61_fsm_60");
    sc_trace(mVcdFile, ap_sig_384, "ap_sig_384");
    sc_trace(mVcdFile, node_output_load_reg_880, "node_output_load_reg_880");
    sc_trace(mVcdFile, tmp_s_fu_540_p3, "tmp_s_fu_540_p3");
    sc_trace(mVcdFile, rec_V_reg_303, "rec_V_reg_303");
    sc_trace(mVcdFile, i_reg_315, "i_reg_315");
    sc_trace(mVcdFile, j_reg_326, "j_reg_326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st62_fsm_61, "ap_sig_cseq_ST_st62_fsm_61");
    sc_trace(mVcdFile, ap_sig_408, "ap_sig_408");
    sc_trace(mVcdFile, tmp_13_cast_fu_604_p1, "tmp_13_cast_fu_604_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st54_fsm_53, "ap_sig_cseq_ST_st54_fsm_53");
    sc_trace(mVcdFile, ap_sig_440, "ap_sig_440");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st60_fsm_59, "ap_sig_cseq_ST_st60_fsm_59");
    sc_trace(mVcdFile, ap_sig_450, "ap_sig_450");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st38_fsm_37, "ap_sig_cseq_ST_st38_fsm_37");
    sc_trace(mVcdFile, ap_sig_463, "ap_sig_463");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st34_fsm_33, "ap_sig_cseq_ST_st34_fsm_33");
    sc_trace(mVcdFile, ap_sig_473, "ap_sig_473");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_483, "ap_sig_483");
    sc_trace(mVcdFile, grp_fu_352_p0, "grp_fu_352_p0");
    sc_trace(mVcdFile, grp_fu_373_p2, "grp_fu_373_p2");
    sc_trace(mVcdFile, cumsum_V_cast_fu_385_p1, "cumsum_V_cast_fu_385_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_388_p1, "tmp_3_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_398_p1, "tmp_8_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_401_p1, "tmp_10_cast_fu_401_p1");
    sc_trace(mVcdFile, tmp11_cast_fu_414_p1, "tmp11_cast_fu_414_p1");
    sc_trace(mVcdFile, tmp10_cast_fu_411_p1, "tmp10_cast_fu_411_p1");
    sc_trace(mVcdFile, grp_fu_337_p2, "grp_fu_337_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_433_p1, "p_Val2_s_fu_433_p1");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast_fu_451_p1, "tmp_i_i_i_i_cast_fu_451_p1");
    sc_trace(mVcdFile, sh_assign_fu_454_p2, "sh_assign_fu_454_p2");
    sc_trace(mVcdFile, tmp_4_i_i_i_fu_468_p2, "tmp_4_i_i_i_fu_468_p2");
    sc_trace(mVcdFile, tmp_4_i_i_i_cast_fu_473_p1, "tmp_4_i_i_i_cast_fu_473_p1");
    sc_trace(mVcdFile, p_Result_s_fu_485_p3, "p_Result_s_fu_485_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_496_p1, "sh_assign_1_cast_fu_496_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_499_p1, "sh_assign_1_cast_cast_fu_499_p1");
    sc_trace(mVcdFile, tmp_2_i_i_i_fu_492_p1, "tmp_2_i_i_i_fu_492_p1");
    sc_trace(mVcdFile, tmp_6_i_i_i_fu_502_p1, "tmp_6_i_i_i_fu_502_p1");
    sc_trace(mVcdFile, tmp_7_i_i_i_fu_506_p2, "tmp_7_i_i_i_fu_506_p2");
    sc_trace(mVcdFile, tmp_6_fu_518_p3, "tmp_6_fu_518_p3");
    sc_trace(mVcdFile, tmp_9_i_i_i_fu_512_p2, "tmp_9_i_i_i_fu_512_p2");
    sc_trace(mVcdFile, tmp_8_fu_526_p1, "tmp_8_fu_526_p1");
    sc_trace(mVcdFile, tmp_9_fu_530_p4, "tmp_9_fu_530_p4");
    sc_trace(mVcdFile, r_V_2_fu_548_p3, "r_V_2_fu_548_p3");
    sc_trace(mVcdFile, tmp_2_fu_571_p3, "tmp_2_fu_571_p3");
    sc_trace(mVcdFile, tmp_2_cast_fu_595_p1, "tmp_2_cast_fu_595_p1");
    sc_trace(mVcdFile, tmp_4_fu_599_p2, "tmp_4_fu_599_p2");
    sc_trace(mVcdFile, grp_fu_615_p1, "grp_fu_615_p1");
    sc_trace(mVcdFile, grp_fu_633_p0, "grp_fu_633_p0");
    sc_trace(mVcdFile, grp_fu_633_p1, "grp_fu_633_p1");
    sc_trace(mVcdFile, grp_fu_633_p2, "grp_fu_633_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_615_p10, "grp_fu_615_p10");
    sc_trace(mVcdFile, grp_fu_633_p10, "grp_fu_633_p10");
#endif

    }
    mHdltvinHandle.open("assign_intensity.hdltvin.dat");
    mHdltvoutHandle.open("assign_intensity.hdltvout.dat");
}

assign_intensity::~assign_intensity() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0;
    delete assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1;
    delete assign_intensity_fdiv_32ns_32ns_32_16_U2;
    delete assign_intensity_uitofp_64ns_32_6_U3;
    delete assign_intensity_mul_48s_32ns_48_6_U4;
    delete assign_intensity_mul_36ns_48ns_52_6_U5;
}

void assign_intensity::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void assign_intensity::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_3F000000;
}

void assign_intensity::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_49800000;
}

void assign_intensity::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_3F800000;
}

void assign_intensity::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_583_p2.read()))) {
        i_reg_315 = i_1_reg_817.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st46_fsm_45.read())) {
        i_reg_315 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st62_fsm_61.read())) {
        j_reg_326 = j_1_reg_830.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_559_p2.read(), ap_const_lv1_0))) {
        j_reg_326 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(tmp_i_fu_423_p2.read(), ap_const_lv1_0))) {
        rec_V_reg_303 = ap_const_lv48_FFFFFFFFFFFF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st46_fsm_45.read()) && 
                esl_seteq<1,1,1>(tmp_i_reg_763.read(), ap_const_lv1_0))) {
        rec_V_reg_303 = tmp_s_fu_540_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st55_fsm_54.read())) {
        alpha_norm_V_reg_855 = grp_fu_615_p2.read();
        node_count_load_reg_865 = node_count_q0.read();
        tmp_10_reg_860 = tmp_10_fu_621_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        cumsum_V_reg_758 = cumsum_V_fu_417_p2.read();
        tmp_i_reg_763 = tmp_i_fu_423_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read())) {
        i_1_reg_817 = i_1_fu_565_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st45_fsm_44.read())) {
        isNeg_reg_798 = sh_assign_fu_454_p2.read().range(8, 8);
        sh_assign_1_reg_803 = sh_assign_1_fu_477_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        j_1_reg_830 = j_1_fu_589_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st44_fsm_43.read())) {
        loc_V_1_reg_793 = loc_V_1_fu_447_p1.read();
        loc_V_reg_787 = p_Val2_s_fu_433_p1.read().range(30, 23);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_583_p2.read()))) {
        node_count_addr_reg_845 =  (sc_lv<4>) (tmp_13_cast_fu_604_p1.read());
        node_output_addr_reg_840 =  (sc_lv<4>) (tmp_13_cast_fu_604_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st61_fsm_60.read())) {
        node_output_load_reg_880 = node_output_q0.read();
        phitmp_reg_875 = grp_fu_633_p2.read().range(51, 20);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st49_fsm_48.read()))) {
        reg_361 = alphabuf_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        reg_365 = alphabuf_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()))) {
        reg_369 = grp_fu_355_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st46_fsm_45.read())) {
        rhs_V_cast_reg_809 = rhs_V_cast_fu_555_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        tmp9_reg_748 = tmp9_fu_405_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read()) && esl_seteq<1,1,1>(exitcond1_fu_559_p2.read(), ap_const_lv1_0))) {
        tmp_12_cast_reg_822 = tmp_12_cast_fu_579_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        tmp_1_i_reg_772 = grp_fu_352_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        tmp_2_i_reg_777 = grp_fu_347_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st37_fsm_36.read())) {
        tmp_3_i_reg_782 = grp_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        tmp_reg_743 = tmp_fu_392_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        val_assign_1_reg_718 = grp_fu_379_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        val_assign_reg_693 = grp_fu_379_p2.read();
    }
}

void assign_intensity::thread_alphabuf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        alphabuf_address0 =  (sc_lv<4>) (tmp_13_cast_fu_604_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        alphabuf_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        alphabuf_address0 = "XXXX";
    }
}

void assign_intensity::thread_alphabuf_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        alphabuf_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        alphabuf_address1 = "XXXX";
    }
}

void assign_intensity::thread_alphabuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read()))) {
        alphabuf_ce0 = ap_const_logic_1;
    } else {
        alphabuf_ce0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_alphabuf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        alphabuf_ce1 = ap_const_logic_1;
    } else {
        alphabuf_ce1 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_559_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_559_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void assign_intensity::thread_ap_sig_117() {
    ap_sig_117 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void assign_intensity::thread_ap_sig_124() {
    ap_sig_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void assign_intensity::thread_ap_sig_132() {
    ap_sig_132 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void assign_intensity::thread_ap_sig_140() {
    ap_sig_140 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void assign_intensity::thread_ap_sig_148() {
    ap_sig_148 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(48, 48));
}

void assign_intensity::thread_ap_sig_159() {
    ap_sig_159 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void assign_intensity::thread_ap_sig_166() {
    ap_sig_166 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void assign_intensity::thread_ap_sig_174() {
    ap_sig_174 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void assign_intensity::thread_ap_sig_182() {
    ap_sig_182 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void assign_intensity::thread_ap_sig_232() {
    ap_sig_232 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void assign_intensity::thread_ap_sig_241() {
    ap_sig_241 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void assign_intensity::thread_ap_sig_254() {
    ap_sig_254 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void assign_intensity::thread_ap_sig_263() {
    ap_sig_263 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void assign_intensity::thread_ap_sig_272() {
    ap_sig_272 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(32, 32));
}

void assign_intensity::thread_ap_sig_281() {
    ap_sig_281 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(36, 36));
}

void assign_intensity::thread_ap_sig_290() {
    ap_sig_290 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(43, 43));
}

void assign_intensity::thread_ap_sig_301() {
    ap_sig_301 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(44, 44));
}

void assign_intensity::thread_ap_sig_312() {
    ap_sig_312 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(45, 45));
}

void assign_intensity::thread_ap_sig_321() {
    ap_sig_321 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(46, 46));
}

void assign_intensity::thread_ap_sig_336() {
    ap_sig_336 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(47, 47));
}

void assign_intensity::thread_ap_sig_354() {
    ap_sig_354 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(49, 49));
}

void assign_intensity::thread_ap_sig_363() {
    ap_sig_363 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(54, 54));
}

void assign_intensity::thread_ap_sig_375() {
    ap_sig_375 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(55, 55));
}

void assign_intensity::thread_ap_sig_384() {
    ap_sig_384 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(60, 60));
}

void assign_intensity::thread_ap_sig_408() {
    ap_sig_408 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(61, 61));
}

void assign_intensity::thread_ap_sig_440() {
    ap_sig_440 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(53, 53));
}

void assign_intensity::thread_ap_sig_450() {
    ap_sig_450 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(59, 59));
}

void assign_intensity::thread_ap_sig_463() {
    ap_sig_463 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(37, 37));
}

void assign_intensity::thread_ap_sig_473() {
    ap_sig_473 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(33, 33));
}

void assign_intensity::thread_ap_sig_483() {
    ap_sig_483 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void assign_intensity::thread_ap_sig_77() {
    ap_sig_77 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void assign_intensity::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_232.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_241.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_254.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_263.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_483.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_77.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_117.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st33_fsm_32() {
    if (ap_sig_272.read()) {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st34_fsm_33() {
    if (ap_sig_473.read()) {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st37_fsm_36() {
    if (ap_sig_281.read()) {
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st38_fsm_37() {
    if (ap_sig_463.read()) {
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_159.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st44_fsm_43() {
    if (ap_sig_290.read()) {
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st45_fsm_44() {
    if (ap_sig_301.read()) {
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st46_fsm_45() {
    if (ap_sig_312.read()) {
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st47_fsm_46() {
    if (ap_sig_321.read()) {
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st48_fsm_47() {
    if (ap_sig_336.read()) {
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st49_fsm_48() {
    if (ap_sig_148.read()) {
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_124.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st50_fsm_49() {
    if (ap_sig_354.read()) {
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st54_fsm_53() {
    if (ap_sig_440.read()) {
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st55_fsm_54() {
    if (ap_sig_363.read()) {
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st56_fsm_55() {
    if (ap_sig_375.read()) {
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_166.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st60_fsm_59() {
    if (ap_sig_450.read()) {
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st61_fsm_60() {
    if (ap_sig_384.read()) {
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st62_fsm_61() {
    if (ap_sig_408.read()) {
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_132.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_174.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_140.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void assign_intensity::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_182.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void assign_intensity::thread_cumsum_V_cast_fu_385_p1() {
    cumsum_V_cast_fu_385_p1 = esl_zext<33,32>(val_assign_reg_693.read());
}

void assign_intensity::thread_cumsum_V_fu_417_p2() {
    cumsum_V_fu_417_p2 = (!tmp11_cast_fu_414_p1.read().is_01() || !tmp10_cast_fu_411_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(tmp11_cast_fu_414_p1.read()) + sc_biguint<34>(tmp10_cast_fu_411_p1.read()));
}

void assign_intensity::thread_exitcond1_fu_559_p2() {
    exitcond1_fu_559_p2 = (!i_reg_315.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_315.read() == ap_const_lv3_4);
}

void assign_intensity::thread_exitcond_fu_583_p2() {
    exitcond_fu_583_p2 = (!j_reg_326.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_326.read() == ap_const_lv3_4);
}

void assign_intensity::thread_grp_fu_352_p0() {
    grp_fu_352_p0 = esl_zext<64,34>(cumsum_V_reg_758.read());
}

void assign_intensity::thread_grp_fu_355_p2() {
    grp_fu_355_p2 = (!alphabuf_q0.read().is_01() || !alphabuf_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(alphabuf_q0.read()) + sc_biguint<32>(alphabuf_q1.read()));
}

void assign_intensity::thread_grp_fu_373_p2() {
    grp_fu_373_p2 = (!reg_365.read().is_01() || !reg_361.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_365.read()) + sc_biguint<32>(reg_361.read()));
}

void assign_intensity::thread_grp_fu_379_p2() {
    grp_fu_379_p2 = (!reg_369.read().is_01() || !grp_fu_373_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_369.read()) + sc_biguint<32>(grp_fu_373_p2.read()));
}

void assign_intensity::thread_grp_fu_615_p1() {
    grp_fu_615_p1 =  (sc_lv<32>) (grp_fu_615_p10.read());
}

void assign_intensity::thread_grp_fu_615_p10() {
    grp_fu_615_p10 = esl_zext<48,32>(reg_361.read());
}

void assign_intensity::thread_grp_fu_633_p0() {
    grp_fu_633_p0 =  (sc_lv<36>) (rhs_V_cast_reg_809.read());
}

void assign_intensity::thread_grp_fu_633_p1() {
    grp_fu_633_p1 =  (sc_lv<48>) (grp_fu_633_p10.read());
}

void assign_intensity::thread_grp_fu_633_p10() {
    grp_fu_633_p10 = esl_zext<52,48>(alpha_norm_V_reg_855.read());
}

void assign_intensity::thread_i_1_fu_565_p2() {
    i_1_fu_565_p2 = (!i_reg_315.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_315.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void assign_intensity::thread_isNeg_fu_460_p3() {
    isNeg_fu_460_p3 = sh_assign_fu_454_p2.read().range(8, 8);
}

void assign_intensity::thread_j_1_fu_589_p2() {
    j_1_fu_589_p2 = (!j_reg_326.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_326.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void assign_intensity::thread_loc_V_1_fu_447_p1() {
    loc_V_1_fu_447_p1 = p_Val2_s_fu_433_p1.read().range(23-1, 0);
}

void assign_intensity::thread_node_count_address0() {
    node_count_address0 = node_count_addr_reg_845.read();
}

void assign_intensity::thread_node_count_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st54_fsm_53.read()))) {
        node_count_ce0 = ap_const_logic_1;
    } else {
        node_count_ce0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_node_count_d0() {
    node_count_d0 = (!node_count_load_reg_865.read().is_01() || !tmp_10_reg_860.read().is_01())? sc_lv<32>(): (sc_biguint<32>(node_count_load_reg_865.read()) + sc_biguint<32>(tmp_10_reg_860.read()));
}

void assign_intensity::thread_node_count_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read()))) {
        node_count_we0 = ap_const_logic_1;
    } else {
        node_count_we0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_node_output_address0() {
    node_output_address0 = node_output_addr_reg_840.read();
}

void assign_intensity::thread_node_output_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st62_fsm_61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st60_fsm_59.read()))) {
        node_output_ce0 = ap_const_logic_1;
    } else {
        node_output_ce0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_node_output_d0() {
    node_output_d0 = (!node_output_load_reg_880.read().is_01() || !phitmp_reg_875.read().is_01())? sc_lv<32>(): (sc_biguint<32>(node_output_load_reg_880.read()) + sc_biguint<32>(phitmp_reg_875.read()));
}

void assign_intensity::thread_node_output_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st62_fsm_61.read()))) {
        node_output_we0 = ap_const_logic_1;
    } else {
        node_output_we0 = ap_const_logic_0;
    }
}

void assign_intensity::thread_p_Result_s_fu_485_p3() {
    p_Result_s_fu_485_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_reg_793.read());
}

void assign_intensity::thread_p_Val2_s_fu_433_p1() {
    p_Val2_s_fu_433_p1 = grp_fu_337_p2.read();
}

void assign_intensity::thread_r_V_2_fu_548_p3() {
    r_V_2_fu_548_p3 = esl_concat<16,20>(intensity.read(), ap_const_lv20_0);
}

void assign_intensity::thread_rhs_V_cast_fu_555_p1() {
    rhs_V_cast_fu_555_p1 = esl_zext<52,36>(r_V_2_fu_548_p3.read());
}

void assign_intensity::thread_sh_assign_1_cast_cast_fu_499_p1() {
    sh_assign_1_cast_cast_fu_499_p1 = esl_sext<24,9>(sh_assign_1_reg_803.read());
}

void assign_intensity::thread_sh_assign_1_cast_fu_496_p1() {
    sh_assign_1_cast_fu_496_p1 = esl_sext<32,9>(sh_assign_1_reg_803.read());
}

void assign_intensity::thread_sh_assign_1_fu_477_p3() {
    sh_assign_1_fu_477_p3 = (!isNeg_fu_460_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_460_p3.read()[0].to_bool())? tmp_4_i_i_i_cast_fu_473_p1.read(): sh_assign_fu_454_p2.read());
}

void assign_intensity::thread_sh_assign_fu_454_p2() {
    sh_assign_fu_454_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_i_cast_fu_451_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_i_cast_fu_451_p1.read()));
}

void assign_intensity::thread_tmp10_cast_fu_411_p1() {
    tmp10_cast_fu_411_p1 = esl_zext<34,33>(tmp_reg_743.read());
}

void assign_intensity::thread_tmp11_cast_fu_414_p1() {
    tmp11_cast_fu_414_p1 = esl_zext<34,33>(tmp9_reg_748.read());
}

void assign_intensity::thread_tmp9_fu_405_p2() {
    tmp9_fu_405_p2 = (!tmp_8_cast_fu_398_p1.read().is_01() || !tmp_10_cast_fu_401_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_8_cast_fu_398_p1.read()) + sc_biguint<33>(tmp_10_cast_fu_401_p1.read()));
}

void assign_intensity::thread_tmp_10_cast_fu_401_p1() {
    tmp_10_cast_fu_401_p1 = esl_zext<33,32>(grp_fu_379_p2.read());
}

void assign_intensity::thread_tmp_10_fu_621_p1() {
    tmp_10_fu_621_p1 = grp_fu_615_p2.read().range(32-1, 0);
}

void assign_intensity::thread_tmp_12_cast_fu_579_p1() {
    tmp_12_cast_fu_579_p1 = esl_zext<6,5>(tmp_2_fu_571_p3.read());
}

void assign_intensity::thread_tmp_13_cast_fu_604_p1() {
    tmp_13_cast_fu_604_p1 = esl_zext<64,6>(tmp_4_fu_599_p2.read());
}

void assign_intensity::thread_tmp_2_cast_fu_595_p1() {
    tmp_2_cast_fu_595_p1 = esl_zext<6,3>(j_reg_326.read());
}

void assign_intensity::thread_tmp_2_fu_571_p3() {
    tmp_2_fu_571_p3 = esl_concat<3,2>(i_reg_315.read(), ap_const_lv2_0);
}

void assign_intensity::thread_tmp_2_i_i_i_fu_492_p1() {
    tmp_2_i_i_i_fu_492_p1 = esl_zext<110,24>(p_Result_s_fu_485_p3.read());
}

void assign_intensity::thread_tmp_3_cast_fu_388_p1() {
    tmp_3_cast_fu_388_p1 = esl_zext<33,32>(grp_fu_379_p2.read());
}

void assign_intensity::thread_tmp_4_fu_599_p2() {
    tmp_4_fu_599_p2 = (!tmp_2_cast_fu_595_p1.read().is_01() || !tmp_12_cast_reg_822.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_2_cast_fu_595_p1.read()) + sc_biguint<6>(tmp_12_cast_reg_822.read()));
}

void assign_intensity::thread_tmp_4_i_i_i_cast_fu_473_p1() {
    tmp_4_i_i_i_cast_fu_473_p1 = esl_sext<9,8>(tmp_4_i_i_i_fu_468_p2.read());
}

void assign_intensity::thread_tmp_4_i_i_i_fu_468_p2() {
    tmp_4_i_i_i_fu_468_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_reg_787.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_reg_787.read()));
}

void assign_intensity::thread_tmp_6_fu_518_p3() {
    tmp_6_fu_518_p3 = tmp_7_i_i_i_fu_506_p2.read().range(23, 23);
}

void assign_intensity::thread_tmp_6_i_i_i_fu_502_p1() {
    tmp_6_i_i_i_fu_502_p1 = esl_zext<110,32>(sh_assign_1_cast_fu_496_p1.read());
}

void assign_intensity::thread_tmp_7_i_i_i_fu_506_p2() {
    tmp_7_i_i_i_fu_506_p2 = (!sh_assign_1_cast_cast_fu_499_p1.read().is_01())? sc_lv<24>(): p_Result_s_fu_485_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_499_p1.read().to_uint();
}

void assign_intensity::thread_tmp_8_cast_fu_398_p1() {
    tmp_8_cast_fu_398_p1 = esl_zext<33,32>(val_assign_1_reg_718.read());
}

void assign_intensity::thread_tmp_8_fu_526_p1() {
    tmp_8_fu_526_p1 = esl_zext<48,1>(tmp_6_fu_518_p3.read());
}

void assign_intensity::thread_tmp_9_fu_530_p4() {
    tmp_9_fu_530_p4 = tmp_9_i_i_i_fu_512_p2.read().range(70, 23);
}

void assign_intensity::thread_tmp_9_i_i_i_fu_512_p2() {
    tmp_9_i_i_i_fu_512_p2 = (!tmp_6_i_i_i_fu_502_p1.read().is_01())? sc_lv<110>(): tmp_2_i_i_i_fu_492_p1.read() << (unsigned short)tmp_6_i_i_i_fu_502_p1.read().to_uint();
}

void assign_intensity::thread_tmp_fu_392_p2() {
    tmp_fu_392_p2 = (!cumsum_V_cast_fu_385_p1.read().is_01() || !tmp_3_cast_fu_388_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(cumsum_V_cast_fu_385_p1.read()) + sc_biguint<33>(tmp_3_cast_fu_388_p1.read()));
}

void assign_intensity::thread_tmp_i_fu_423_p2() {
    tmp_i_fu_423_p2 = (!cumsum_V_fu_417_p2.read().is_01() || !ap_const_lv34_0.is_01())? sc_lv<1>(): sc_lv<1>(cumsum_V_fu_417_p2.read() == ap_const_lv34_0);
}

void assign_intensity::thread_tmp_i_i_i_i_cast_fu_451_p1() {
    tmp_i_i_i_i_cast_fu_451_p1 = esl_zext<9,8>(loc_V_reg_787.read());
}

void assign_intensity::thread_tmp_s_fu_540_p3() {
    tmp_s_fu_540_p3 = (!isNeg_reg_798.read()[0].is_01())? sc_lv<48>(): ((isNeg_reg_798.read()[0].to_bool())? tmp_8_fu_526_p1.read(): tmp_9_fu_530_p4.read());
}

void assign_intensity::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(tmp_i_fu_423_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st46_fsm_45;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 70368744177664 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_559_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st48_fsm_47;
            }
            break;
        case 140737488355328 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_583_p2.read())) {
                ap_NS_fsm = ap_ST_st47_fsm_46;
            } else {
                ap_NS_fsm = ap_ST_st49_fsm_48;
            }
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_st56_fsm_55;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_st57_fsm_56;
            break;
        case 72057594037927936 : 
            ap_NS_fsm = ap_ST_st58_fsm_57;
            break;
        case 144115188075855872 : 
            ap_NS_fsm = ap_ST_st59_fsm_58;
            break;
        case 288230376151711744 : 
            ap_NS_fsm = ap_ST_st60_fsm_59;
            break;
        case 576460752303423488 : 
            ap_NS_fsm = ap_ST_st61_fsm_60;
            break;
        case 1152921504606846976 : 
            ap_NS_fsm = ap_ST_st62_fsm_61;
            break;
        case 2305843009213693952 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<62>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void assign_intensity::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alphabuf_address0\" :  \"" << alphabuf_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alphabuf_ce0\" :  \"" << alphabuf_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alphabuf_q0\" :  \"" << alphabuf_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alphabuf_address1\" :  \"" << alphabuf_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alphabuf_ce1\" :  \"" << alphabuf_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alphabuf_q1\" :  \"" << alphabuf_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"intensity\" :  \"" << intensity.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_output_address0\" :  \"" << node_output_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_output_ce0\" :  \"" << node_output_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_output_we0\" :  \"" << node_output_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_output_d0\" :  \"" << node_output_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"node_output_q0\" :  \"" << node_output_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_count_address0\" :  \"" << node_count_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_count_ce0\" :  \"" << node_count_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_count_we0\" :  \"" << node_count_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_count_d0\" :  \"" << node_count_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"node_count_q0\" :  \"" << node_count_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

