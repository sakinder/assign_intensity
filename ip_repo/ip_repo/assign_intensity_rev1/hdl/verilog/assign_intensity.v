// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="assign_intensity,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.535000,HLS_SYN_LAT=277,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=17,HLS_SYN_FF=2273,HLS_SYN_LUT=3202}" *)

module assign_intensity (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        alphabuf_address0,
        alphabuf_ce0,
        alphabuf_q0,
        alphabuf_address1,
        alphabuf_ce1,
        alphabuf_q1,
        intensity,
        node_output_address0,
        node_output_ce0,
        node_output_we0,
        node_output_d0,
        node_output_q0,
        node_count_address0,
        node_count_ce0,
        node_count_we0,
        node_count_d0,
        node_count_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 62'b1;
parameter    ap_ST_st2_fsm_1 = 62'b10;
parameter    ap_ST_st3_fsm_2 = 62'b100;
parameter    ap_ST_st4_fsm_3 = 62'b1000;
parameter    ap_ST_st5_fsm_4 = 62'b10000;
parameter    ap_ST_st6_fsm_5 = 62'b100000;
parameter    ap_ST_st7_fsm_6 = 62'b1000000;
parameter    ap_ST_st8_fsm_7 = 62'b10000000;
parameter    ap_ST_st9_fsm_8 = 62'b100000000;
parameter    ap_ST_st10_fsm_9 = 62'b1000000000;
parameter    ap_ST_st11_fsm_10 = 62'b10000000000;
parameter    ap_ST_st12_fsm_11 = 62'b100000000000;
parameter    ap_ST_st13_fsm_12 = 62'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 62'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 62'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 62'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 62'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 62'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 62'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 62'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 62'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 62'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 62'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 62'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 62'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 62'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 62'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 62'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 62'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 62'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 62'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 62'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 62'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 62'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 62'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 62'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 62'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 62'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 62'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 62'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 62'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 62'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 62'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 62'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 62'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 62'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 62'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 62'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 62'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 62'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 62'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 62'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 62'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 62'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 62'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 62'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 62'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 62'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 62'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 62'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 62'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 62'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv48_FFFFFFFFFFFF = 48'b111111111111111111111111111111111111111111111111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3F000000 = 32'b111111000000000000000000000000;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_49800000 = 32'b1001001100000000000000000000000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv34_0 = 34'b0000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_33 = 32'b110011;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] alphabuf_address0;
output   alphabuf_ce0;
input  [31:0] alphabuf_q0;
output  [3:0] alphabuf_address1;
output   alphabuf_ce1;
input  [31:0] alphabuf_q1;
input  [15:0] intensity;
output  [3:0] node_output_address0;
output   node_output_ce0;
output   node_output_we0;
output  [31:0] node_output_d0;
input  [31:0] node_output_q0;
output  [3:0] node_count_address0;
output   node_count_ce0;
output   node_count_we0;
output  [31:0] node_count_d0;
input  [31:0] node_count_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] alphabuf_address0;
reg alphabuf_ce0;
reg[3:0] alphabuf_address1;
reg alphabuf_ce1;
reg node_output_ce0;
reg node_output_we0;
reg node_count_ce0;
reg node_count_we0;

(* fsm_encoding = "none" *) reg   [61:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_77;
reg   [31:0] reg_361;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_117;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_124;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_132;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_140;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_148;
reg   [31:0] reg_365;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] reg_369;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_159;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_166;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_174;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_182;
wire   [31:0] grp_fu_379_p2;
reg   [31:0] val_assign_reg_693;
reg   [31:0] val_assign_1_reg_718;
wire   [32:0] tmp_fu_392_p2;
reg   [32:0] tmp_reg_743;
wire   [32:0] tmp9_fu_405_p2;
reg   [32:0] tmp9_reg_748;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_232;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_241;
wire   [33:0] cumsum_V_fu_417_p2;
reg   [33:0] cumsum_V_reg_758;
wire   [0:0] tmp_i_fu_423_p2;
reg   [0:0] tmp_i_reg_763;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_254;
wire   [31:0] grp_fu_352_p1;
reg   [31:0] tmp_1_i_reg_772;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_263;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] tmp_2_i_reg_777;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_272;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] tmp_3_i_reg_782;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_281;
reg   [7:0] loc_V_reg_787;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_290;
wire   [22:0] loc_V_1_fu_447_p1;
reg   [22:0] loc_V_1_reg_793;
wire   [0:0] isNeg_fu_460_p3;
reg   [0:0] isNeg_reg_798;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_301;
wire   [8:0] sh_assign_1_fu_477_p3;
reg   [8:0] sh_assign_1_reg_803;
wire   [51:0] rhs_V_cast_fu_555_p1;
reg   [51:0] rhs_V_cast_reg_809;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_312;
wire   [2:0] i_1_fu_565_p2;
reg   [2:0] i_1_reg_817;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_321;
wire   [5:0] tmp_12_cast_fu_579_p1;
reg   [5:0] tmp_12_cast_reg_822;
wire   [0:0] exitcond1_fu_559_p2;
wire   [2:0] j_1_fu_589_p2;
reg   [2:0] j_1_reg_830;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_336;
wire   [0:0] exitcond_fu_583_p2;
reg   [3:0] node_output_addr_reg_840;
reg   [3:0] node_count_addr_reg_845;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_354;
wire   [47:0] grp_fu_615_p2;
reg   [47:0] alpha_norm_V_reg_855;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_363;
wire   [31:0] tmp_10_fu_621_p1;
reg   [31:0] tmp_10_reg_860;
reg   [31:0] node_count_load_reg_865;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_375;
reg   [31:0] phitmp_reg_875;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_384;
reg   [31:0] node_output_load_reg_880;
wire   [47:0] tmp_s_fu_540_p3;
reg  signed [47:0] rec_V_reg_303;
reg   [2:0] i_reg_315;
reg   [2:0] j_reg_326;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_408;
wire   [63:0] tmp_13_cast_fu_604_p1;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_440;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_450;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_463;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_473;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_483;
wire   [63:0] grp_fu_352_p0;
wire   [31:0] grp_fu_373_p2;
wire   [32:0] cumsum_V_cast_fu_385_p1;
wire   [32:0] tmp_3_cast_fu_388_p1;
wire   [32:0] tmp_8_cast_fu_398_p1;
wire   [32:0] tmp_10_cast_fu_401_p1;
wire   [33:0] tmp11_cast_fu_414_p1;
wire   [33:0] tmp10_cast_fu_411_p1;
wire   [31:0] grp_fu_337_p2;
wire   [31:0] p_Val2_s_fu_433_p1;
wire   [8:0] tmp_i_i_i_i_cast_fu_451_p1;
wire   [8:0] sh_assign_fu_454_p2;
wire   [7:0] tmp_4_i_i_i_fu_468_p2;
wire  signed [8:0] tmp_4_i_i_i_cast_fu_473_p1;
wire   [23:0] p_Result_s_fu_485_p3;
wire  signed [31:0] sh_assign_1_cast_fu_496_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_499_p1;
wire   [109:0] tmp_2_i_i_i_fu_492_p1;
wire   [109:0] tmp_6_i_i_i_fu_502_p1;
wire   [23:0] tmp_7_i_i_i_fu_506_p2;
wire   [0:0] tmp_6_fu_518_p3;
wire   [109:0] tmp_9_i_i_i_fu_512_p2;
wire   [47:0] tmp_8_fu_526_p1;
wire   [47:0] tmp_9_fu_530_p4;
wire   [35:0] r_V_2_fu_548_p3;
wire   [4:0] tmp_2_fu_571_p3;
wire   [5:0] tmp_2_cast_fu_595_p1;
wire   [5:0] tmp_4_fu_599_p2;
wire   [31:0] grp_fu_615_p1;
wire   [35:0] grp_fu_633_p0;
wire   [47:0] grp_fu_633_p1;
wire   [51:0] grp_fu_633_p2;
reg   [61:0] ap_NS_fsm;
wire   [47:0] grp_fu_615_p10;
wire   [51:0] grp_fu_633_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 62'b1;
end

assign_intensity_fadd_32ns_32ns_32_7_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_i_reg_782),
    .din1(ap_const_lv32_3F000000),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

assign_intensity_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_i_reg_777),
    .din1(ap_const_lv32_49800000),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

assign_intensity_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_fdiv_32ns_32ns_32_16_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_3F800000),
    .din1(tmp_1_i_reg_772),
    .ce(1'b1),
    .dout(grp_fu_347_p2)
);

assign_intensity_uitofp_64ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
assign_intensity_uitofp_64ns_32_6_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .ce(1'b1),
    .dout(grp_fu_352_p1)
);

assign_intensity_mul_48s_32ns_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
assign_intensity_mul_48s_32ns_48_6_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rec_V_reg_303),
    .din1(grp_fu_615_p1),
    .ce(1'b1),
    .dout(grp_fu_615_p2)
);

assign_intensity_mul_36ns_48ns_52_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 52 ))
assign_intensity_mul_36ns_48ns_52_6_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_633_p0),
    .din1(grp_fu_633_p1),
    .ce(1'b1),
    .dout(grp_fu_633_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st48_fsm_47) & ~(1'b0 == exitcond_fu_583_p2))) begin
        i_reg_315 <= i_1_reg_817;
    end else if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        i_reg_315 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        j_reg_326 <= j_1_reg_830;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (exitcond1_fu_559_p2 == 1'b0))) begin
        j_reg_326 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(tmp_i_fu_423_p2 == 1'b0))) begin
        rec_V_reg_303 <= ap_const_lv48_FFFFFFFFFFFF;
    end else if (((1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (tmp_i_reg_763 == 1'b0))) begin
        rec_V_reg_303 <= tmp_s_fu_540_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        alpha_norm_V_reg_855 <= grp_fu_615_p2;
        node_count_load_reg_865 <= node_count_q0;
        tmp_10_reg_860 <= tmp_10_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cumsum_V_reg_758 <= cumsum_V_fu_417_p2;
        tmp_i_reg_763 <= tmp_i_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        i_1_reg_817 <= i_1_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        isNeg_reg_798 <= sh_assign_fu_454_p2[ap_const_lv32_8];
        sh_assign_1_reg_803 <= sh_assign_1_fu_477_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        j_1_reg_830 <= j_1_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        loc_V_1_reg_793 <= loc_V_1_fu_447_p1;
        loc_V_reg_787 <= {{p_Val2_s_fu_433_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st48_fsm_47) & (1'b0 == exitcond_fu_583_p2))) begin
        node_count_addr_reg_845 <= tmp_13_cast_fu_604_p1;
        node_output_addr_reg_840 <= tmp_13_cast_fu_604_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        node_output_load_reg_880 <= node_output_q0;
        phitmp_reg_875 <= {{grp_fu_633_p2[ap_const_lv32_33 : ap_const_lv32_14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        reg_361 <= alphabuf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        reg_365 <= alphabuf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        reg_369 <= grp_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        rhs_V_cast_reg_809[35 : 20] <= rhs_V_cast_fu_555_p1[35 : 20];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp9_reg_748 <= tmp9_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (exitcond1_fu_559_p2 == 1'b0))) begin
        tmp_12_cast_reg_822[4 : 2] <= tmp_12_cast_fu_579_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_1_i_reg_772 <= grp_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp_2_i_reg_777 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        tmp_3_i_reg_782 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_reg_743 <= tmp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        val_assign_1_reg_718 <= grp_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        val_assign_reg_693 <= grp_fu_379_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        alphabuf_address0 = tmp_13_cast_fu_604_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        alphabuf_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        alphabuf_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        alphabuf_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        alphabuf_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        alphabuf_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        alphabuf_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        alphabuf_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        alphabuf_address0 = ap_const_lv64_0;
    end else begin
        alphabuf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        alphabuf_address1 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        alphabuf_address1 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        alphabuf_address1 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        alphabuf_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        alphabuf_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        alphabuf_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        alphabuf_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        alphabuf_address1 = ap_const_lv64_1;
    end else begin
        alphabuf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        alphabuf_ce0 = 1'b1;
    end else begin
        alphabuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        alphabuf_ce1 = 1'b1;
    end else begin
        alphabuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(exitcond1_fu_559_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(exitcond1_fu_559_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_232) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_241) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_254) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_263) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_483) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_77) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_473) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_281) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_463) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_290) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_301) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_312) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_321) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_336) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_148) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_354) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_440) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_363) begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_375) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_166) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_450) begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_384) begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_408) begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_132) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_174) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_140) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_182) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st56_fsm_55) | (1'b1 == ap_sig_cseq_ST_st54_fsm_53))) begin
        node_count_ce0 = 1'b1;
    end else begin
        node_count_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        node_count_we0 = 1'b1;
    end else begin
        node_count_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st62_fsm_61) | (1'b1 == ap_sig_cseq_ST_st60_fsm_59))) begin
        node_output_ce0 = 1'b1;
    end else begin
        node_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        node_output_we0 = 1'b1;
    end else begin
        node_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if (~(tmp_i_fu_423_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st46_fsm_45;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            if (~(exitcond1_fu_559_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st48_fsm_47 : begin
            if (~(1'b0 == exitcond_fu_583_p2)) begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = ap_const_lv32_0;

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_132 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_140 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_148 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_166 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_174 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_182 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_232 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_241 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_254 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_263 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_281 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_290 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_301 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_312 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_321 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_336 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_354 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_363 = (1'b1 == ap_CS_fsm[ap_const_lv32_36]);
end

always @ (*) begin
    ap_sig_375 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_384 = (1'b1 == ap_CS_fsm[ap_const_lv32_3C]);
end

always @ (*) begin
    ap_sig_408 = (1'b1 == ap_CS_fsm[ap_const_lv32_3D]);
end

always @ (*) begin
    ap_sig_440 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

always @ (*) begin
    ap_sig_450 = (1'b1 == ap_CS_fsm[ap_const_lv32_3B]);
end

always @ (*) begin
    ap_sig_463 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_473 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_483 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_77 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign cumsum_V_cast_fu_385_p1 = val_assign_reg_693;

assign cumsum_V_fu_417_p2 = (tmp11_cast_fu_414_p1 + tmp10_cast_fu_411_p1);

assign exitcond1_fu_559_p2 = ((i_reg_315 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_fu_583_p2 = ((j_reg_326 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_352_p0 = cumsum_V_reg_758;

assign grp_fu_355_p2 = (alphabuf_q0 + alphabuf_q1);

assign grp_fu_373_p2 = (reg_365 + reg_361);

assign grp_fu_379_p2 = (reg_369 + grp_fu_373_p2);

assign grp_fu_615_p1 = grp_fu_615_p10;

assign grp_fu_615_p10 = reg_361;

assign grp_fu_633_p0 = rhs_V_cast_reg_809;

assign grp_fu_633_p1 = grp_fu_633_p10;

assign grp_fu_633_p10 = alpha_norm_V_reg_855;

assign i_1_fu_565_p2 = (i_reg_315 + ap_const_lv3_1);

assign isNeg_fu_460_p3 = sh_assign_fu_454_p2[ap_const_lv32_8];

assign j_1_fu_589_p2 = (j_reg_326 + ap_const_lv3_1);

assign loc_V_1_fu_447_p1 = p_Val2_s_fu_433_p1[22:0];

assign node_count_address0 = node_count_addr_reg_845;

assign node_count_d0 = (node_count_load_reg_865 + tmp_10_reg_860);

assign node_output_address0 = node_output_addr_reg_840;

assign node_output_d0 = (node_output_load_reg_880 + phitmp_reg_875);

assign p_Result_s_fu_485_p3 = {{1'b1}, {loc_V_1_reg_793}};

assign p_Val2_s_fu_433_p1 = grp_fu_337_p2;

assign r_V_2_fu_548_p3 = {{intensity}, {ap_const_lv20_0}};

assign rhs_V_cast_fu_555_p1 = r_V_2_fu_548_p3;

assign sh_assign_1_cast_cast_fu_499_p1 = $signed(sh_assign_1_reg_803);

assign sh_assign_1_cast_fu_496_p1 = $signed(sh_assign_1_reg_803);

assign sh_assign_1_fu_477_p3 = ((isNeg_fu_460_p3[0:0] === 1'b1) ? tmp_4_i_i_i_cast_fu_473_p1 : sh_assign_fu_454_p2);

assign sh_assign_fu_454_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_i_cast_fu_451_p1));

assign tmp10_cast_fu_411_p1 = tmp_reg_743;

assign tmp11_cast_fu_414_p1 = tmp9_reg_748;

assign tmp9_fu_405_p2 = (tmp_8_cast_fu_398_p1 + tmp_10_cast_fu_401_p1);

assign tmp_10_cast_fu_401_p1 = grp_fu_379_p2;

assign tmp_10_fu_621_p1 = grp_fu_615_p2[31:0];

assign tmp_12_cast_fu_579_p1 = tmp_2_fu_571_p3;

assign tmp_13_cast_fu_604_p1 = tmp_4_fu_599_p2;

assign tmp_2_cast_fu_595_p1 = j_reg_326;

assign tmp_2_fu_571_p3 = {{i_reg_315}, {ap_const_lv2_0}};

assign tmp_2_i_i_i_fu_492_p1 = p_Result_s_fu_485_p3;

assign tmp_3_cast_fu_388_p1 = grp_fu_379_p2;

assign tmp_4_fu_599_p2 = (tmp_2_cast_fu_595_p1 + tmp_12_cast_reg_822);

assign tmp_4_i_i_i_cast_fu_473_p1 = $signed(tmp_4_i_i_i_fu_468_p2);

assign tmp_4_i_i_i_fu_468_p2 = (ap_const_lv8_7F - loc_V_reg_787);

assign tmp_6_fu_518_p3 = tmp_7_i_i_i_fu_506_p2[ap_const_lv32_17];

assign tmp_6_i_i_i_fu_502_p1 = $unsigned(sh_assign_1_cast_fu_496_p1);

assign tmp_7_i_i_i_fu_506_p2 = p_Result_s_fu_485_p3 >> sh_assign_1_cast_cast_fu_499_p1;

assign tmp_8_cast_fu_398_p1 = val_assign_1_reg_718;

assign tmp_8_fu_526_p1 = tmp_6_fu_518_p3;

assign tmp_9_fu_530_p4 = {{tmp_9_i_i_i_fu_512_p2[ap_const_lv32_46 : ap_const_lv32_17]}};

assign tmp_9_i_i_i_fu_512_p2 = tmp_2_i_i_i_fu_492_p1 << tmp_6_i_i_i_fu_502_p1;

assign tmp_fu_392_p2 = (cumsum_V_cast_fu_385_p1 + tmp_3_cast_fu_388_p1);

assign tmp_i_fu_423_p2 = ((cumsum_V_fu_417_p2 == ap_const_lv34_0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_cast_fu_451_p1 = loc_V_reg_787;

assign tmp_s_fu_540_p3 = ((isNeg_reg_798[0:0] === 1'b1) ? tmp_8_fu_526_p1 : tmp_9_fu_530_p4);

always @ (posedge ap_clk) begin
    rhs_V_cast_reg_809[19:0] <= 20'b00000000000000000000;
    rhs_V_cast_reg_809[51:36] <= 16'b0000000000000000;
    tmp_12_cast_reg_822[1:0] <= 2'b00;
    tmp_12_cast_reg_822[5] <= 1'b0;
end

endmodule //assign_intensity
