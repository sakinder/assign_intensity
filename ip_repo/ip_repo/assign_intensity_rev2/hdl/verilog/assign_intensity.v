// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="assign_intensity,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.790000,HLS_SYN_LAT=115,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=61,HLS_SYN_FF=2148,HLS_SYN_LUT=2767}" *)

module assign_intensity (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        alphabuf_address0,
        alphabuf_ce0,
        alphabuf_q0,
        alphabuf_address1,
        alphabuf_ce1,
        alphabuf_q1,
        intensity,
        node_output_address0,
        node_output_ce0,
        node_output_q0,
        node_output_address1,
        node_output_ce1,
        node_output_we1,
        node_output_d1,
        node_count_address0,
        node_count_ce0,
        node_count_q0,
        node_count_address1,
        node_count_ce1,
        node_count_we1,
        node_count_d1,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 48'b1;
parameter    ap_ST_st2_fsm_1 = 48'b10;
parameter    ap_ST_st3_fsm_2 = 48'b100;
parameter    ap_ST_st4_fsm_3 = 48'b1000;
parameter    ap_ST_st5_fsm_4 = 48'b10000;
parameter    ap_ST_st6_fsm_5 = 48'b100000;
parameter    ap_ST_st7_fsm_6 = 48'b1000000;
parameter    ap_ST_st8_fsm_7 = 48'b10000000;
parameter    ap_ST_st9_fsm_8 = 48'b100000000;
parameter    ap_ST_st10_fsm_9 = 48'b1000000000;
parameter    ap_ST_st11_fsm_10 = 48'b10000000000;
parameter    ap_ST_st12_fsm_11 = 48'b100000000000;
parameter    ap_ST_st13_fsm_12 = 48'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 48'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 48'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 48'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 48'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 48'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 48'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 48'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 48'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 48'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 48'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 48'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 48'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 48'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 48'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 48'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 48'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 48'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 48'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 48'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 48'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 48'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 48'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 48'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 48'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 48'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 48'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 48'b1000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_40 = 48'b10000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_41 = 48'b100000000000000000000000000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_42 = 48'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_43 = 48'b10000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_44 = 48'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_45 = 48'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_46 = 48'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_47 = 48'b100000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv32_3F000000 = 32'b111111000000000000000000000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_49800000 = 32'b1001001100000000000000000000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv34_0 = 34'b0000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv48_FFFFFFFFFFFF = 48'b111111111111111111111111111111111111111111111111;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv61_1 = 61'b1;
parameter    ap_const_lv32_2F = 32'b101111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] alphabuf_address0;
output   alphabuf_ce0;
input  [31:0] alphabuf_q0;
output  [3:0] alphabuf_address1;
output   alphabuf_ce1;
input  [31:0] alphabuf_q1;
input  [15:0] intensity;
output  [3:0] node_output_address0;
output   node_output_ce0;
input  [31:0] node_output_q0;
output  [3:0] node_output_address1;
output   node_output_ce1;
output   node_output_we1;
output  [31:0] node_output_d1;
output  [3:0] node_count_address0;
output   node_count_ce0;
input  [31:0] node_count_q0;
output  [3:0] node_count_address1;
output   node_count_ce1;
output   node_count_we1;
output  [31:0] node_count_d1;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] alphabuf_address0;
reg alphabuf_ce0;
reg[3:0] alphabuf_address1;
reg alphabuf_ce1;
reg[3:0] node_output_address0;
reg node_output_ce0;
reg[3:0] node_output_address1;
reg node_output_ce1;
reg node_output_we1;
reg[31:0] node_output_d1;
reg[3:0] node_count_address0;
reg node_count_ce0;
reg[3:0] node_count_address1;
reg node_count_ce1;
reg node_count_we1;
reg[31:0] node_count_d1;

(* fsm_encoding = "none" *) reg   [47:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_63;
reg   [1:0] j4_reg_381;
reg   [1:0] j_3_reg_392;
reg   [1:0] j_s_reg_403;
reg   [1:0] j_2_reg_414;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] reg_455;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_116;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_123;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_131;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_139;
reg   [31:0] reg_459;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_40;
reg    ap_sig_148;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg    ap_reg_ppiten_pp0_it8;
reg    ap_reg_ppiten_pp0_it9;
reg    ap_reg_ppiten_pp0_it10;
reg    ap_reg_ppiten_pp0_it11;
reg    ap_reg_ppiten_pp0_it12;
reg    ap_reg_ppiten_pp0_it13;
reg    ap_reg_ppiten_pp0_it14;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_42;
reg    ap_sig_186;
reg    ap_reg_ppiten_pp1_it1;
reg    ap_reg_ppiten_pp1_it0;
reg    ap_reg_ppiten_pp1_it2;
reg    ap_reg_ppiten_pp1_it3;
reg    ap_reg_ppiten_pp1_it4;
reg    ap_reg_ppiten_pp1_it5;
reg    ap_reg_ppiten_pp1_it6;
reg    ap_reg_ppiten_pp1_it7;
reg    ap_reg_ppiten_pp1_it8;
reg    ap_reg_ppiten_pp1_it9;
reg    ap_reg_ppiten_pp1_it10;
reg    ap_reg_ppiten_pp1_it11;
reg    ap_reg_ppiten_pp1_it12;
reg    ap_reg_ppiten_pp1_it13;
reg    ap_reg_ppiten_pp1_it14;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_44;
reg    ap_sig_224;
reg    ap_reg_ppiten_pp2_it1;
reg    ap_reg_ppiten_pp2_it0;
reg    ap_reg_ppiten_pp2_it2;
reg    ap_reg_ppiten_pp2_it3;
reg    ap_reg_ppiten_pp2_it4;
reg    ap_reg_ppiten_pp2_it5;
reg    ap_reg_ppiten_pp2_it6;
reg    ap_reg_ppiten_pp2_it7;
reg    ap_reg_ppiten_pp2_it8;
reg    ap_reg_ppiten_pp2_it9;
reg    ap_reg_ppiten_pp2_it10;
reg    ap_reg_ppiten_pp2_it11;
reg    ap_reg_ppiten_pp2_it12;
reg    ap_reg_ppiten_pp2_it13;
reg    ap_reg_ppiten_pp2_it14;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_46;
reg    ap_sig_263;
reg    ap_reg_ppiten_pp3_it1;
reg    ap_reg_ppiten_pp3_it0;
reg    ap_reg_ppiten_pp3_it2;
reg    ap_reg_ppiten_pp3_it3;
reg    ap_reg_ppiten_pp3_it4;
reg    ap_reg_ppiten_pp3_it5;
reg    ap_reg_ppiten_pp3_it6;
reg    ap_reg_ppiten_pp3_it7;
reg    ap_reg_ppiten_pp3_it8;
reg    ap_reg_ppiten_pp3_it9;
reg    ap_reg_ppiten_pp3_it10;
reg    ap_reg_ppiten_pp3_it11;
reg    ap_reg_ppiten_pp3_it12;
reg    ap_reg_ppiten_pp3_it13;
reg    ap_reg_ppiten_pp3_it14;
reg   [31:0] reg_464;
reg   [31:0] reg_468;
wire   [31:0] grp_fu_472_p2;
reg   [31:0] reg_478;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_312;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_319;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_348;
reg   [31:0] val_assign_1_reg_992;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_364;
reg   [31:0] val_assign_2_reg_1017;
wire   [32:0] tmp_fu_489_p2;
reg   [32:0] tmp_reg_1032;
wire   [33:0] cumsum_V_fu_515_p2;
reg   [33:0] cumsum_V_reg_1037;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_382;
wire   [0:0] tmp_i_fu_521_p2;
reg   [0:0] tmp_i_reg_1043;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_391;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_400;
wire   [31:0] grp_fu_435_p1;
reg   [31:0] tmp_1_i_reg_1053;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_412;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] tmp_i_8_reg_1058;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_422;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] tmp_2_i_reg_1063;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_432;
reg   [7:0] loc_V_reg_1068;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_442;
wire   [22:0] loc_V_1_fu_544_p1;
reg   [22:0] loc_V_1_reg_1074;
wire  signed [47:0] rec_V_fu_647_p3;
reg  signed [47:0] rec_V_reg_1079;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_454;
wire   [35:0] r_V_4_fu_654_p3;
reg   [35:0] r_V_4_reg_1087;
reg   [3:0] node_output_addr_reg_1097;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter1;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter2;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter3;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter4;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter5;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter6;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter7;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter8;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter9;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter10;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter11;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter12;
reg   [3:0] ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter13;
reg   [3:0] node_count_addr_reg_1103;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter1;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter2;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter3;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter4;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter5;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter6;
reg   [3:0] ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter7;
wire   [1:0] j_1_fu_669_p2;
reg   [1:0] j_1_reg_1109;
wire   [0:0] exitcond_fu_675_p2;
reg   [0:0] exitcond_reg_1114;
wire   [47:0] grp_fu_685_p2;
reg   [47:0] alpha_norm_V_reg_1123;
wire   [31:0] tmp_19_fu_690_p1;
reg   [31:0] tmp_19_reg_1128;
wire   [51:0] rhs_V_cast_fu_703_p1;
reg   [51:0] rhs_V_cast_reg_1138;
reg   [31:0] phitmp_reg_1146;
reg   [3:0] node_output_addr_1_reg_1156;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter1;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter2;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter3;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter4;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter5;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter6;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter7;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter8;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter9;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter10;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter11;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter12;
reg   [3:0] ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter13;
reg   [3:0] node_count_addr_1_reg_1162;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter1;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter2;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter3;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter4;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter5;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter6;
reg   [3:0] ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter7;
wire   [1:0] j_1_1_fu_743_p2;
reg   [1:0] j_1_1_reg_1168;
wire   [0:0] exitcond_1_fu_749_p2;
reg   [0:0] exitcond_1_reg_1173;
wire   [47:0] grp_fu_759_p2;
reg   [47:0] alpha_norm_V_1_reg_1182;
wire   [31:0] tmp_20_fu_764_p1;
reg   [31:0] tmp_20_reg_1187;
reg   [31:0] phitmp_1_reg_1197;
reg   [3:0] node_output_addr_2_reg_1207;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter1;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter2;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter3;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter4;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter5;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter6;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter7;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter8;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter9;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter10;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter11;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter12;
reg   [3:0] ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter13;
reg   [3:0] node_count_addr_2_reg_1213;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter1;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter2;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter3;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter4;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter5;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter6;
reg   [3:0] ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter7;
wire   [1:0] j_1_2_fu_813_p2;
reg   [1:0] j_1_2_reg_1219;
wire   [0:0] exitcond_2_fu_819_p2;
reg   [0:0] exitcond_2_reg_1224;
wire   [47:0] grp_fu_829_p2;
reg   [47:0] alpha_norm_V_2_reg_1233;
wire   [31:0] tmp_21_fu_834_p1;
reg   [31:0] tmp_21_reg_1238;
reg   [31:0] phitmp_2_reg_1248;
reg   [3:0] node_output_addr_3_reg_1258;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter1;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter2;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter3;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter4;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter5;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter6;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter7;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter8;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter9;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter10;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter11;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter12;
reg   [3:0] ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter13;
reg   [3:0] node_count_addr_3_reg_1264;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter1;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter2;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter3;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter4;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter5;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter6;
reg   [3:0] ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter7;
wire   [1:0] j_1_3_fu_887_p2;
reg   [1:0] j_1_3_reg_1270;
wire   [0:0] exitcond_3_fu_893_p2;
reg   [0:0] exitcond_3_reg_1275;
wire   [47:0] grp_fu_903_p2;
reg   [47:0] alpha_norm_V_3_reg_1284;
wire   [31:0] tmp_22_fu_908_p1;
reg   [31:0] tmp_22_reg_1289;
reg   [31:0] phitmp_3_reg_1299;
reg    ap_sig_cseq_ST_st56_fsm_41;
reg    ap_sig_741;
reg    ap_sig_cseq_ST_st72_fsm_43;
reg    ap_sig_751;
reg    ap_sig_cseq_ST_st88_fsm_45;
reg    ap_sig_761;
reg   [1:0] j4_phi_fu_385_p4;
reg   [1:0] j_3_phi_fu_396_p4;
reg   [1:0] j_s_phi_fu_407_p4;
reg   [1:0] j_2_phi_fu_418_p4;
wire   [63:0] tmp_s_fu_662_p1;
wire   [63:0] tmp_17_cast_fu_736_p1;
wire   [63:0] tmp_16_fu_802_p3;
wire   [63:0] tmp_19_cast_fu_880_p1;
wire   [31:0] tmp_7_fu_694_p2;
wire   [31:0] tmp_33_1_fu_768_p2;
wire   [31:0] tmp_33_2_fu_838_p2;
wire   [31:0] tmp_33_3_fu_912_p2;
wire   [31:0] tmp_9_fu_722_p2;
wire   [31:0] tmp_35_1_fu_792_p2;
wire   [31:0] tmp_35_2_fu_862_p2;
wire   [31:0] tmp_35_3_fu_936_p2;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_839;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_849;
wire   [63:0] grp_fu_435_p0;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_858;
wire   [31:0] grp_fu_449_p2;
wire   [32:0] tmp_10_cast_fu_486_p1;
wire   [32:0] cumsum_V_cast_fu_482_p1;
wire   [32:0] tmp_13_cast_fu_498_p1;
wire   [32:0] tmp_7_cast_fu_495_p1;
wire   [32:0] tmp9_fu_505_p2;
wire   [33:0] tmp10_cast_fu_502_p1;
wire   [33:0] tmp11_cast_fu_511_p1;
wire   [31:0] grp_fu_425_p2;
wire   [31:0] p_Val2_s_fu_530_p1;
wire   [23:0] p_Result_s_fu_548_p3;
wire   [8:0] tmp_i_i_i_i_cast_fu_559_p1;
wire   [8:0] sh_assign_fu_562_p2;
wire   [7:0] tmp_4_i_i_i_fu_576_p2;
wire   [0:0] isNeg_fu_568_p3;
wire  signed [8:0] tmp_4_i_i_i_cast_fu_581_p1;
wire   [8:0] sh_assign_1_fu_585_p3;
wire  signed [31:0] sh_assign_1_cast_fu_593_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_597_p1;
wire   [109:0] tmp_2_i_i_i_fu_555_p1;
wire   [109:0] tmp_6_i_i_i_fu_601_p1;
wire   [23:0] tmp_7_i_i_i_fu_605_p2;
wire   [0:0] tmp_17_fu_617_p3;
wire   [109:0] tmp_9_i_i_i_fu_611_p2;
wire   [47:0] tmp_6_fu_625_p1;
wire   [47:0] tmp_8_fu_629_p4;
wire   [47:0] tmp_14_fu_639_p3;
wire   [31:0] grp_fu_685_p1;
wire   [35:0] grp_fu_706_p0;
wire   [47:0] grp_fu_706_p1;
wire   [51:0] grp_fu_706_p2;
wire   [2:0] tmp_15_fu_728_p3;
wire   [31:0] grp_fu_759_p1;
wire   [35:0] grp_fu_777_p0;
wire   [47:0] grp_fu_777_p1;
wire   [51:0] grp_fu_777_p2;
wire   [2:0] j_22_cast_fu_798_p1;
wire   [31:0] grp_fu_829_p1;
wire   [35:0] grp_fu_847_p0;
wire   [47:0] grp_fu_847_p1;
wire   [51:0] grp_fu_847_p2;
wire   [2:0] tmp_18_fu_868_p3;
wire  signed [3:0] tmp_19_cast5_fu_876_p1;
wire   [31:0] grp_fu_903_p0;
wire   [47:0] grp_fu_921_p0;
wire   [35:0] grp_fu_921_p1;
wire   [51:0] grp_fu_921_p2;
reg    ap_sig_cseq_ST_st104_fsm_47;
reg    ap_sig_1171;
reg   [47:0] ap_NS_fsm;
wire   [47:0] grp_fu_685_p10;
wire   [51:0] grp_fu_706_p00;
wire   [51:0] grp_fu_706_p10;
wire   [47:0] grp_fu_759_p10;
wire   [51:0] grp_fu_777_p10;
wire   [47:0] grp_fu_829_p10;
wire   [51:0] grp_fu_847_p10;
wire   [47:0] grp_fu_903_p00;
wire   [51:0] grp_fu_921_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 48'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ppiten_pp0_it8 = 1'b0;
#0 ap_reg_ppiten_pp0_it9 = 1'b0;
#0 ap_reg_ppiten_pp0_it10 = 1'b0;
#0 ap_reg_ppiten_pp0_it11 = 1'b0;
#0 ap_reg_ppiten_pp0_it12 = 1'b0;
#0 ap_reg_ppiten_pp0_it13 = 1'b0;
#0 ap_reg_ppiten_pp0_it14 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it2 = 1'b0;
#0 ap_reg_ppiten_pp1_it3 = 1'b0;
#0 ap_reg_ppiten_pp1_it4 = 1'b0;
#0 ap_reg_ppiten_pp1_it5 = 1'b0;
#0 ap_reg_ppiten_pp1_it6 = 1'b0;
#0 ap_reg_ppiten_pp1_it7 = 1'b0;
#0 ap_reg_ppiten_pp1_it8 = 1'b0;
#0 ap_reg_ppiten_pp1_it9 = 1'b0;
#0 ap_reg_ppiten_pp1_it10 = 1'b0;
#0 ap_reg_ppiten_pp1_it11 = 1'b0;
#0 ap_reg_ppiten_pp1_it12 = 1'b0;
#0 ap_reg_ppiten_pp1_it13 = 1'b0;
#0 ap_reg_ppiten_pp1_it14 = 1'b0;
#0 ap_reg_ppiten_pp2_it1 = 1'b0;
#0 ap_reg_ppiten_pp2_it0 = 1'b0;
#0 ap_reg_ppiten_pp2_it2 = 1'b0;
#0 ap_reg_ppiten_pp2_it3 = 1'b0;
#0 ap_reg_ppiten_pp2_it4 = 1'b0;
#0 ap_reg_ppiten_pp2_it5 = 1'b0;
#0 ap_reg_ppiten_pp2_it6 = 1'b0;
#0 ap_reg_ppiten_pp2_it7 = 1'b0;
#0 ap_reg_ppiten_pp2_it8 = 1'b0;
#0 ap_reg_ppiten_pp2_it9 = 1'b0;
#0 ap_reg_ppiten_pp2_it10 = 1'b0;
#0 ap_reg_ppiten_pp2_it11 = 1'b0;
#0 ap_reg_ppiten_pp2_it12 = 1'b0;
#0 ap_reg_ppiten_pp2_it13 = 1'b0;
#0 ap_reg_ppiten_pp2_it14 = 1'b0;
#0 ap_reg_ppiten_pp3_it1 = 1'b0;
#0 ap_reg_ppiten_pp3_it0 = 1'b0;
#0 ap_reg_ppiten_pp3_it2 = 1'b0;
#0 ap_reg_ppiten_pp3_it3 = 1'b0;
#0 ap_reg_ppiten_pp3_it4 = 1'b0;
#0 ap_reg_ppiten_pp3_it5 = 1'b0;
#0 ap_reg_ppiten_pp3_it6 = 1'b0;
#0 ap_reg_ppiten_pp3_it7 = 1'b0;
#0 ap_reg_ppiten_pp3_it8 = 1'b0;
#0 ap_reg_ppiten_pp3_it9 = 1'b0;
#0 ap_reg_ppiten_pp3_it10 = 1'b0;
#0 ap_reg_ppiten_pp3_it11 = 1'b0;
#0 ap_reg_ppiten_pp3_it12 = 1'b0;
#0 ap_reg_ppiten_pp3_it13 = 1'b0;
#0 ap_reg_ppiten_pp3_it14 = 1'b0;
end

assign_intensity_fadd_32ns_32ns_32_7_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_fadd_32ns_32ns_32_7_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_i_reg_1063),
    .din1(ap_const_lv32_3F000000),
    .ce(1'b1),
    .dout(grp_fu_425_p2)
);

assign_intensity_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_8_reg_1058),
    .din1(ap_const_lv32_49800000),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

assign_intensity_uitofp_64ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
assign_intensity_uitofp_64ns_32_6_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_435_p0),
    .ce(1'b1),
    .dout(grp_fu_435_p1)
);

assign_intensity_frecip_32ns_32ns_32_11_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
assign_intensity_frecip_32ns_32ns_32_11_full_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_0),
    .din1(tmp_1_i_reg_1053),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

assign_intensity_mul_48s_32ns_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
assign_intensity_mul_48s_32ns_48_6_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rec_V_reg_1079),
    .din1(grp_fu_685_p1),
    .ce(1'b1),
    .dout(grp_fu_685_p2)
);

assign_intensity_mul_36ns_48ns_52_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 52 ))
assign_intensity_mul_36ns_48ns_52_6_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_706_p0),
    .din1(grp_fu_706_p1),
    .ce(1'b1),
    .dout(grp_fu_706_p2)
);

assign_intensity_mul_48s_32ns_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
assign_intensity_mul_48s_32ns_48_6_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rec_V_reg_1079),
    .din1(grp_fu_759_p1),
    .ce(1'b1),
    .dout(grp_fu_759_p2)
);

assign_intensity_mul_36ns_48ns_52_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 52 ))
assign_intensity_mul_36ns_48ns_52_6_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_777_p0),
    .din1(grp_fu_777_p1),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

assign_intensity_mul_48s_32ns_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
assign_intensity_mul_48s_32ns_48_6_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rec_V_reg_1079),
    .din1(grp_fu_829_p1),
    .ce(1'b1),
    .dout(grp_fu_829_p2)
);

assign_intensity_mul_36ns_48ns_52_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 52 ))
assign_intensity_mul_36ns_48ns_52_6_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_847_p0),
    .din1(grp_fu_847_p1),
    .ce(1'b1),
    .dout(grp_fu_847_p2)
);

assign_intensity_mul_32ns_48s_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
assign_intensity_mul_32ns_48s_48_6_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_903_p0),
    .din1(rec_V_reg_1079),
    .ce(1'b1),
    .dout(grp_fu_903_p2)
);

assign_intensity_mul_48ns_36ns_52_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 52 ))
assign_intensity_mul_48ns_36ns_52_6_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_921_p0),
    .din1(grp_fu_921_p1),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & ~(1'b0 == exitcond_fu_675_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40)) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & ~(1'b0 == exitcond_1_fu_749_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_41)) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42)) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_41)) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it10 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it11 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it12 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it13 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it14 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it9 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & ~(1'b0 == exitcond_2_fu_819_p2))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st72_fsm_43)) begin
            ap_reg_ppiten_pp2_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44)) begin
            ap_reg_ppiten_pp2_it1 <= ap_reg_ppiten_pp2_it0;
        end else if ((1'b1 == ap_sig_cseq_ST_st72_fsm_43)) begin
            ap_reg_ppiten_pp2_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it10 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it11 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it12 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it13 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it13 <= ap_reg_ppiten_pp2_it12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it14 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it14 <= ap_reg_ppiten_pp2_it13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it9 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & ~(1'b0 == exitcond_3_fu_893_p2))) begin
            ap_reg_ppiten_pp3_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st88_fsm_45)) begin
            ap_reg_ppiten_pp3_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46)) begin
            ap_reg_ppiten_pp3_it1 <= ap_reg_ppiten_pp3_it0;
        end else if ((1'b1 == ap_sig_cseq_ST_st88_fsm_45)) begin
            ap_reg_ppiten_pp3_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it10 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it10 <= ap_reg_ppiten_pp3_it9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it11 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it11 <= ap_reg_ppiten_pp3_it10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it12 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it12 <= ap_reg_ppiten_pp3_it11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it13 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it13 <= ap_reg_ppiten_pp3_it12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it14 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it14 <= ap_reg_ppiten_pp3_it13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it3 <= ap_reg_ppiten_pp3_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it4 <= ap_reg_ppiten_pp3_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it5 <= ap_reg_ppiten_pp3_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it6 <= ap_reg_ppiten_pp3_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it7 <= ap_reg_ppiten_pp3_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it8 <= ap_reg_ppiten_pp3_it7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it9 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp3_it9 <= ap_reg_ppiten_pp3_it8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_1114))) begin
        j4_reg_381 <= j_1_reg_1109;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        j4_reg_381 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it1) & (1'b0 == exitcond_3_reg_1275))) begin
        j_2_reg_414 <= j_1_3_reg_1270;
    end else if ((1'b1 == ap_sig_cseq_ST_st88_fsm_45)) begin
        j_2_reg_414 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond_1_reg_1173))) begin
        j_3_reg_392 <= j_1_1_reg_1168;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_41)) begin
        j_3_reg_392 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == exitcond_2_reg_1224))) begin
        j_s_reg_403 <= j_1_2_reg_1219;
    end else if ((1'b1 == ap_sig_cseq_ST_st72_fsm_43)) begin
        j_s_reg_403 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it1)) | ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it1)))) begin
        reg_459 <= alphabuf_q1;
    end else if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it1)))) begin
        reg_459 <= alphabuf_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        alpha_norm_V_1_reg_1182 <= grp_fu_759_p2;
        alpha_norm_V_2_reg_1233 <= grp_fu_829_p2;
        alpha_norm_V_3_reg_1284 <= grp_fu_903_p2;
        alpha_norm_V_reg_1123 <= grp_fu_685_p2;
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter2[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter1[1 : 0];
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter3[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter2[1 : 0];
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter4[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter3[1 : 0];
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter5[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter4[1 : 0];
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter6[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter5[1 : 0];
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter7[1 : 0] <= ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter6[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter2[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter1[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter3[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter2[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter4[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter3[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter5[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter4[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter6[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter5[1 : 0];
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter7[1 : 0] <= ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter6[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter2[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter1[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter3[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter2[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter4[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter3[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter5[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter4[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter6[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter5[1 : 0];
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter7[1 : 0] <= ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter6[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter2[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter1[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter3[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter2[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter4[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter3[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter5[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter4[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter6[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter5[1 : 0];
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter7[1 : 0] <= ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter6[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter10[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter9[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter11[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter10[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter12[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter11[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter13[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter12[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter2[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter1[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter3[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter2[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter4[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter3[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter5[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter4[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter6[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter5[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter7[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter6[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter8[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter7[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter9[1 : 0] <= ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter8[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter10[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter9[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter11[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter10[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter12[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter11[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter13[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter12[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter2[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter1[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter3[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter2[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter4[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter3[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter5[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter4[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter6[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter5[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter7[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter6[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter8[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter7[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter9[1 : 0] <= ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter8[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter10[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter9[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter11[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter10[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter12[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter11[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter13[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter12[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter2[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter1[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter3[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter2[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter4[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter3[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter5[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter4[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter6[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter5[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter7[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter6[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter8[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter7[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter9[1 : 0] <= ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter8[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter10[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter9[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter11[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter10[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter12[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter11[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter13[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter12[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter2[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter1[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter3[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter2[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter4[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter3[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter5[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter4[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter6[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter5[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter7[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter6[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter8[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter7[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter9[1 : 0] <= ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter8[1 : 0];
        phitmp_1_reg_1197 <= {{grp_fu_777_p2[ap_const_lv32_33 : ap_const_lv32_14]}};
        phitmp_2_reg_1248 <= {{grp_fu_847_p2[ap_const_lv32_33 : ap_const_lv32_14]}};
        phitmp_3_reg_1299 <= {{grp_fu_921_p2[ap_const_lv32_33 : ap_const_lv32_14]}};
        phitmp_reg_1146 <= {{grp_fu_706_p2[ap_const_lv32_33 : ap_const_lv32_14]}};
        tmp_19_reg_1128 <= tmp_19_fu_690_p1;
        tmp_20_reg_1187 <= tmp_20_fu_764_p1;
        tmp_21_reg_1238 <= tmp_21_fu_834_p1;
        tmp_22_reg_1289 <= tmp_22_fu_908_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42)) begin
        ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter1[1 : 0] <= node_count_addr_1_reg_1162[1 : 0];
        ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter1[1 : 0] <= node_output_addr_1_reg_1156[1 : 0];
        exitcond_1_reg_1173 <= exitcond_1_fu_749_p2;
        node_count_addr_1_reg_1162[1 : 0] <= tmp_17_cast_fu_736_p1[1 : 0];
        node_output_addr_1_reg_1156[1 : 0] <= tmp_17_cast_fu_736_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44)) begin
        ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter1[1 : 0] <= node_count_addr_2_reg_1213[1 : 0];
        ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter1[1 : 0] <= node_output_addr_2_reg_1207[1 : 0];
        exitcond_2_reg_1224 <= exitcond_2_fu_819_p2;
        node_count_addr_2_reg_1213[1 : 0] <= tmp_16_fu_802_p3[1 : 0];
        node_output_addr_2_reg_1207[1 : 0] <= tmp_16_fu_802_p3[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46)) begin
        ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter1[1 : 0] <= node_count_addr_3_reg_1264[1 : 0];
        ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter1[1 : 0] <= node_output_addr_3_reg_1258[1 : 0];
        exitcond_3_reg_1275 <= exitcond_3_fu_893_p2;
        node_count_addr_3_reg_1264[1 : 0] <= tmp_19_cast_fu_880_p1[1 : 0];
        node_output_addr_3_reg_1258[1 : 0] <= tmp_19_cast_fu_880_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40)) begin
        ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter1[1 : 0] <= node_count_addr_reg_1103[1 : 0];
        ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter1[1 : 0] <= node_output_addr_reg_1097[1 : 0];
        exitcond_reg_1114 <= exitcond_fu_675_p2;
        node_count_addr_reg_1103[1 : 0] <= tmp_s_fu_662_p1[1 : 0];
        node_output_addr_reg_1097[1 : 0] <= tmp_s_fu_662_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        cumsum_V_reg_1037 <= cumsum_V_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        j_1_1_reg_1168 <= j_1_1_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        j_1_2_reg_1219 <= j_1_2_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it0))) begin
        j_1_3_reg_1270 <= j_1_3_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        j_1_reg_1109 <= j_1_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_1043 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        loc_V_1_reg_1074 <= loc_V_1_fu_544_p1;
        loc_V_reg_1068 <= {{p_Val2_s_fu_530_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        r_V_4_reg_1087[35 : 20] <= r_V_4_fu_654_p3[35 : 20];
        rec_V_reg_1079 <= rec_V_fu_647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        reg_455 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) | (1'b1 == ap_reg_ppiten_pp1_it7) | (1'b1 == ap_reg_ppiten_pp2_it7) | (1'b1 == ap_reg_ppiten_pp3_it7))) begin
        reg_464 <= node_count_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it13) | (1'b1 == ap_reg_ppiten_pp1_it13) | (1'b1 == ap_reg_ppiten_pp2_it13) | (1'b1 == ap_reg_ppiten_pp3_it13))) begin
        reg_468 <= node_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        reg_478 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it8)) begin
        rhs_V_cast_reg_1138[35 : 20] <= rhs_V_cast_fu_703_p1[35 : 20];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_1043 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        tmp_1_i_reg_1053 <= grp_fu_435_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_1043 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        tmp_2_i_reg_1063 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_1043 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        tmp_i_8_reg_1058 <= grp_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_i_reg_1043 <= tmp_i_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_reg_1032 <= tmp_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        val_assign_1_reg_992 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        val_assign_2_reg_1017 <= grp_fu_472_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        alphabuf_address0 = tmp_16_fu_802_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        alphabuf_address0 = tmp_s_fu_662_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        alphabuf_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        alphabuf_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        alphabuf_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        alphabuf_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        alphabuf_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        alphabuf_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        alphabuf_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        alphabuf_address0 = ap_const_lv64_0;
    end else begin
        alphabuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it0))) begin
        alphabuf_address1 = tmp_19_cast_fu_880_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        alphabuf_address1 = tmp_17_cast_fu_736_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        alphabuf_address1 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        alphabuf_address1 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        alphabuf_address1 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        alphabuf_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        alphabuf_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        alphabuf_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        alphabuf_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        alphabuf_address1 = ap_const_lv64_1;
    end else begin
        alphabuf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it0)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it0)))) begin
        alphabuf_ce0 = 1'b1;
    end else begin
        alphabuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it0)) | ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it0)))) begin
        alphabuf_ce1 = 1'b1;
    end else begin
        alphabuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st104_fsm_47)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st104_fsm_47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_148) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_186) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_224) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_263) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1171) begin
        ap_sig_cseq_ST_st104_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_382) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_391) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_400) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_412) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_858) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_422) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_849) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_116) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_432) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_839) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_442) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_312) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_454) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_123) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_741) begin
        ap_sig_cseq_ST_st56_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_348) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_131) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_751) begin
        ap_sig_cseq_ST_st72_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_364) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_761) begin
        ap_sig_cseq_ST_st88_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_139) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_319) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_40) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_1114))) begin
        j4_phi_fu_385_p4 = j_1_reg_1109;
    end else begin
        j4_phi_fu_385_p4 = j4_reg_381;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_46) & (1'b1 == ap_reg_ppiten_pp3_it1) & (1'b0 == exitcond_3_reg_1275))) begin
        j_2_phi_fu_418_p4 = j_1_3_reg_1270;
    end else begin
        j_2_phi_fu_418_p4 = j_2_reg_414;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_42) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond_1_reg_1173))) begin
        j_3_phi_fu_396_p4 = j_1_1_reg_1168;
    end else begin
        j_3_phi_fu_396_p4 = j_3_reg_392;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_44) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == exitcond_2_reg_1224))) begin
        j_s_phi_fu_407_p4 = j_1_2_reg_1219;
    end else begin
        j_s_phi_fu_407_p4 = j_s_reg_403;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it6)) begin
        node_count_address0 = ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter5;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it6)) begin
        node_count_address0 = ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter5;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it6)) begin
        node_count_address0 = ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter5;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it6)) begin
        node_count_address0 = ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter5;
    end else begin
        node_count_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it8)) begin
        node_count_address1 = ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter7;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it8)) begin
        node_count_address1 = ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter7;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it8)) begin
        node_count_address1 = ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter7;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it8)) begin
        node_count_address1 = ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter7;
    end else begin
        node_count_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) | (1'b1 == ap_reg_ppiten_pp1_it6) | (1'b1 == ap_reg_ppiten_pp2_it6) | (1'b1 == ap_reg_ppiten_pp3_it6))) begin
        node_count_ce0 = 1'b1;
    end else begin
        node_count_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it8) | (1'b1 == ap_reg_ppiten_pp1_it8) | (1'b1 == ap_reg_ppiten_pp2_it8) | (1'b1 == ap_reg_ppiten_pp3_it8))) begin
        node_count_ce1 = 1'b1;
    end else begin
        node_count_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it8)) begin
        node_count_d1 = tmp_33_3_fu_912_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it8)) begin
        node_count_d1 = tmp_33_2_fu_838_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it8)) begin
        node_count_d1 = tmp_33_1_fu_768_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it8)) begin
        node_count_d1 = tmp_7_fu_694_p2;
    end else begin
        node_count_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it8) | (1'b1 == ap_reg_ppiten_pp1_it8) | (1'b1 == ap_reg_ppiten_pp2_it8) | (1'b1 == ap_reg_ppiten_pp3_it8))) begin
        node_count_we1 = 1'b1;
    end else begin
        node_count_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it12)) begin
        node_output_address0 = ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter11;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it12)) begin
        node_output_address0 = ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter11;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it12)) begin
        node_output_address0 = ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter11;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it12)) begin
        node_output_address0 = ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter11;
    end else begin
        node_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it14)) begin
        node_output_address1 = ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter13;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it14)) begin
        node_output_address1 = ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter13;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it14)) begin
        node_output_address1 = ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter13;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it14)) begin
        node_output_address1 = ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter13;
    end else begin
        node_output_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it12) | (1'b1 == ap_reg_ppiten_pp1_it12) | (1'b1 == ap_reg_ppiten_pp2_it12) | (1'b1 == ap_reg_ppiten_pp3_it12))) begin
        node_output_ce0 = 1'b1;
    end else begin
        node_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it14) | (1'b1 == ap_reg_ppiten_pp1_it14) | (1'b1 == ap_reg_ppiten_pp2_it14) | (1'b1 == ap_reg_ppiten_pp3_it14))) begin
        node_output_ce1 = 1'b1;
    end else begin
        node_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp3_it14)) begin
        node_output_d1 = tmp_35_3_fu_936_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp2_it14)) begin
        node_output_d1 = tmp_35_2_fu_862_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp1_it14)) begin
        node_output_d1 = tmp_35_1_fu_792_p2;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it14)) begin
        node_output_d1 = tmp_9_fu_722_p2;
    end else begin
        node_output_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it14) | (1'b1 == ap_reg_ppiten_pp1_it14) | (1'b1 == ap_reg_ppiten_pp2_it14) | (1'b1 == ap_reg_ppiten_pp3_it14))) begin
        node_output_we1 = 1'b1;
    end else begin
        node_output_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_40;
        end
        ap_ST_pp0_stg0_fsm_40 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it14) & ~(1'b1 == ap_reg_ppiten_pp0_it13))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_40;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_41;
            end
        end
        ap_ST_st56_fsm_41 : begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_42;
        end
        ap_ST_pp1_stg0_fsm_42 : begin
            if (~((1'b1 == ap_reg_ppiten_pp1_it14) & ~(1'b1 == ap_reg_ppiten_pp1_it13))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st72_fsm_43;
            end
        end
        ap_ST_st72_fsm_43 : begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_44;
        end
        ap_ST_pp2_stg0_fsm_44 : begin
            if (~((1'b1 == ap_reg_ppiten_pp2_it14) & ~(1'b1 == ap_reg_ppiten_pp2_it13))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_44;
            end else begin
                ap_NS_fsm = ap_ST_st88_fsm_45;
            end
        end
        ap_ST_st88_fsm_45 : begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_46;
        end
        ap_ST_pp3_stg0_fsm_46 : begin
            if (~((1'b1 == ap_reg_ppiten_pp3_it14) & ~(1'b1 == ap_reg_ppiten_pp3_it13))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st104_fsm_47;
            end
        end
        ap_ST_st104_fsm_47 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = ap_const_lv32_0;

always @ (*) begin
    ap_sig_116 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_1171 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_123 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_131 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_139 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_148 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_186 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_224 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_263 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_312 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_319 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_348 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_364 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_382 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_391 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_400 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_412 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_422 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_432 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_442 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_454 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_63 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_741 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_751 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_761 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_839 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_849 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_858 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

assign cumsum_V_cast_fu_482_p1 = reg_478;

assign cumsum_V_fu_515_p2 = (tmp10_cast_fu_502_p1 + tmp11_cast_fu_511_p1);

assign exitcond_1_fu_749_p2 = ((j_3_phi_fu_396_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_2_fu_819_p2 = ((j_s_phi_fu_407_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_3_fu_893_p2 = ((j_2_phi_fu_418_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_675_p2 = ((j4_phi_fu_385_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign grp_fu_435_p0 = cumsum_V_reg_1037;

assign grp_fu_443_p2 = (alphabuf_q0 + alphabuf_q1);

assign grp_fu_449_p2 = (alphabuf_q1 + alphabuf_q0);

assign grp_fu_472_p2 = (reg_455 + grp_fu_449_p2);

assign grp_fu_685_p1 = grp_fu_685_p10;

assign grp_fu_685_p10 = reg_459;

assign grp_fu_706_p0 = grp_fu_706_p00;

assign grp_fu_706_p00 = r_V_4_reg_1087;

assign grp_fu_706_p1 = grp_fu_706_p10;

assign grp_fu_706_p10 = alpha_norm_V_reg_1123;

assign grp_fu_759_p1 = grp_fu_759_p10;

assign grp_fu_759_p10 = reg_459;

assign grp_fu_777_p0 = rhs_V_cast_reg_1138;

assign grp_fu_777_p1 = grp_fu_777_p10;

assign grp_fu_777_p10 = alpha_norm_V_1_reg_1182;

assign grp_fu_829_p1 = grp_fu_829_p10;

assign grp_fu_829_p10 = reg_459;

assign grp_fu_847_p0 = rhs_V_cast_reg_1138;

assign grp_fu_847_p1 = grp_fu_847_p10;

assign grp_fu_847_p10 = alpha_norm_V_2_reg_1233;

assign grp_fu_903_p0 = grp_fu_903_p00;

assign grp_fu_903_p00 = reg_459;

assign grp_fu_921_p0 = grp_fu_921_p00;

assign grp_fu_921_p00 = alpha_norm_V_3_reg_1284;

assign grp_fu_921_p1 = rhs_V_cast_reg_1138;

assign isNeg_fu_568_p3 = sh_assign_fu_562_p2[ap_const_lv32_8];

assign j_1_1_fu_743_p2 = (ap_const_lv2_1 + j_3_phi_fu_396_p4);

assign j_1_2_fu_813_p2 = (ap_const_lv2_1 + j_s_phi_fu_407_p4);

assign j_1_3_fu_887_p2 = (ap_const_lv2_1 + j_2_phi_fu_418_p4);

assign j_1_fu_669_p2 = (ap_const_lv2_1 + j4_phi_fu_385_p4);

assign j_22_cast_fu_798_p1 = j_s_phi_fu_407_p4;

assign loc_V_1_fu_544_p1 = p_Val2_s_fu_530_p1[22:0];

assign p_Result_s_fu_548_p3 = {{1'b1}, {loc_V_1_reg_1074}};

assign p_Val2_s_fu_530_p1 = grp_fu_425_p2;

assign r_V_4_fu_654_p3 = {{intensity}, {ap_const_lv20_0}};

assign rec_V_fu_647_p3 = ((tmp_i_reg_1043[0:0] === 1'b1) ? ap_const_lv48_FFFFFFFFFFFF : tmp_14_fu_639_p3);

assign rhs_V_cast_fu_703_p1 = r_V_4_reg_1087;

assign sh_assign_1_cast_cast_fu_597_p1 = $signed(sh_assign_1_fu_585_p3);

assign sh_assign_1_cast_fu_593_p1 = $signed(sh_assign_1_fu_585_p3);

assign sh_assign_1_fu_585_p3 = ((isNeg_fu_568_p3[0:0] === 1'b1) ? tmp_4_i_i_i_cast_fu_581_p1 : sh_assign_fu_562_p2);

assign sh_assign_fu_562_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_i_cast_fu_559_p1));

assign tmp10_cast_fu_502_p1 = tmp_reg_1032;

assign tmp11_cast_fu_511_p1 = tmp9_fu_505_p2;

assign tmp9_fu_505_p2 = (tmp_13_cast_fu_498_p1 + tmp_7_cast_fu_495_p1);

assign tmp_10_cast_fu_486_p1 = val_assign_2_reg_1017;

assign tmp_13_cast_fu_498_p1 = reg_478;

assign tmp_14_fu_639_p3 = ((isNeg_fu_568_p3[0:0] === 1'b1) ? tmp_6_fu_625_p1 : tmp_8_fu_629_p4);

assign tmp_15_fu_728_p3 = {{1'b1}, {j_3_phi_fu_396_p4}};

assign tmp_16_fu_802_p3 = {{ap_const_lv61_1}, {j_22_cast_fu_798_p1}};

assign tmp_17_cast_fu_736_p1 = tmp_15_fu_728_p3;

assign tmp_17_fu_617_p3 = tmp_7_i_i_i_fu_605_p2[ap_const_lv32_17];

assign tmp_18_fu_868_p3 = {{1'b1}, {j_2_phi_fu_418_p4}};

assign tmp_19_cast5_fu_876_p1 = $signed(tmp_18_fu_868_p3);

assign tmp_19_cast_fu_880_p1 = $unsigned(tmp_19_cast5_fu_876_p1);

assign tmp_19_fu_690_p1 = grp_fu_685_p2[31:0];

assign tmp_20_fu_764_p1 = grp_fu_759_p2[31:0];

assign tmp_21_fu_834_p1 = grp_fu_829_p2[31:0];

assign tmp_22_fu_908_p1 = grp_fu_903_p2[31:0];

assign tmp_2_i_i_i_fu_555_p1 = p_Result_s_fu_548_p3;

assign tmp_33_1_fu_768_p2 = (reg_464 + tmp_20_reg_1187);

assign tmp_33_2_fu_838_p2 = (reg_464 + tmp_21_reg_1238);

assign tmp_33_3_fu_912_p2 = (tmp_22_reg_1289 + reg_464);

assign tmp_35_1_fu_792_p2 = (reg_468 + phitmp_1_reg_1197);

assign tmp_35_2_fu_862_p2 = (reg_468 + phitmp_2_reg_1248);

assign tmp_35_3_fu_936_p2 = (phitmp_3_reg_1299 + reg_468);

assign tmp_4_i_i_i_cast_fu_581_p1 = $signed(tmp_4_i_i_i_fu_576_p2);

assign tmp_4_i_i_i_fu_576_p2 = (ap_const_lv8_7F - loc_V_reg_1068);

assign tmp_6_fu_625_p1 = tmp_17_fu_617_p3;

assign tmp_6_i_i_i_fu_601_p1 = $unsigned(sh_assign_1_cast_fu_593_p1);

assign tmp_7_cast_fu_495_p1 = val_assign_1_reg_992;

assign tmp_7_fu_694_p2 = (reg_464 + tmp_19_reg_1128);

assign tmp_7_i_i_i_fu_605_p2 = p_Result_s_fu_548_p3 >> sh_assign_1_cast_cast_fu_597_p1;

assign tmp_8_fu_629_p4 = {{tmp_9_i_i_i_fu_611_p2[ap_const_lv32_46 : ap_const_lv32_17]}};

assign tmp_9_fu_722_p2 = (reg_468 + phitmp_reg_1146);

assign tmp_9_i_i_i_fu_611_p2 = tmp_2_i_i_i_fu_555_p1 << tmp_6_i_i_i_fu_601_p1;

assign tmp_fu_489_p2 = (tmp_10_cast_fu_486_p1 + cumsum_V_cast_fu_482_p1);

assign tmp_i_fu_521_p2 = ((cumsum_V_reg_1037 == ap_const_lv34_0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_cast_fu_559_p1 = loc_V_reg_1068;

assign tmp_s_fu_662_p1 = j4_phi_fu_385_p4;

always @ (posedge ap_clk) begin
    r_V_4_reg_1087[19:0] <= 20'b00000000000000000000;
    node_output_addr_reg_1097[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter1[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter2[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter3[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter4[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter5[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter6[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter7[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter8[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter9[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter10[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter11[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter12[3:2] <= 2'b00;
    ap_reg_ppstg_node_output_addr_reg_1097_pp0_iter13[3:2] <= 2'b00;
    node_count_addr_reg_1103[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter1[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter2[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter3[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter4[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter5[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter6[3:2] <= 2'b00;
    ap_reg_ppstg_node_count_addr_reg_1103_pp0_iter7[3:2] <= 2'b00;
    rhs_V_cast_reg_1138[19:0] <= 20'b00000000000000000000;
    rhs_V_cast_reg_1138[51:36] <= 16'b0000000000000000;
    node_output_addr_1_reg_1156[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter1[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter2[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter3[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter4[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter5[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter6[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter7[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter8[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter9[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter10[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter11[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter12[3:2] <= 2'b01;
    ap_reg_ppstg_node_output_addr_1_reg_1156_pp1_iter13[3:2] <= 2'b01;
    node_count_addr_1_reg_1162[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter1[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter2[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter3[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter4[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter5[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter6[3:2] <= 2'b01;
    ap_reg_ppstg_node_count_addr_1_reg_1162_pp1_iter7[3:2] <= 2'b01;
    node_output_addr_2_reg_1207[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter1[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter2[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter3[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter4[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter5[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter6[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter7[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter8[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter9[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter10[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter11[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter12[3:2] <= 2'b10;
    ap_reg_ppstg_node_output_addr_2_reg_1207_pp2_iter13[3:2] <= 2'b10;
    node_count_addr_2_reg_1213[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter1[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter2[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter3[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter4[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter5[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter6[3:2] <= 2'b10;
    ap_reg_ppstg_node_count_addr_2_reg_1213_pp2_iter7[3:2] <= 2'b10;
    node_output_addr_3_reg_1258[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter1[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter2[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter3[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter4[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter5[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter6[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter7[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter8[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter9[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter10[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter11[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter12[3:2] <= 2'b11;
    ap_reg_ppstg_node_output_addr_3_reg_1258_pp3_iter13[3:2] <= 2'b11;
    node_count_addr_3_reg_1264[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter1[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter2[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter3[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter4[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter5[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter6[3:2] <= 2'b11;
    ap_reg_ppstg_node_count_addr_3_reg_1264_pp3_iter7[3:2] <= 2'b11;
end

endmodule //assign_intensity
